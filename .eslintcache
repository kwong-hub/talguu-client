[{"/home/bek/Projects/React/talguu-client/src/index.js":"1","/home/bek/Projects/React/talguu-client/src/App.js":"2","/home/bek/Projects/React/talguu-client/src/serviceWorker.js":"3","/home/bek/Projects/React/talguu-client/src/pages/Upload.jsx":"4","/home/bek/Projects/React/talguu-client/src/pages/landing/Landing.jsx":"5","/home/bek/Projects/React/talguu-client/src/pages/profile/Profile.jsx":"6","/home/bek/Projects/React/talguu-client/src/pages/home/Home.jsx":"7","/home/bek/Projects/React/talguu-client/src/partials/sideNav/SideNav.jsx":"8","/home/bek/Projects/React/talguu-client/src/pages/account/Account.jsx":"9","/home/bek/Projects/React/talguu-client/src/pages/savedPlaylist/SavedPlayList.jsx":"10","/home/bek/Projects/React/talguu-client/src/pages/settings/Settings.jsx":"11","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamVideo.jsx":"12","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/UploadVideo.jsx":"13","/home/bek/Projects/React/talguu-client/src/pages/watchVideo/WatchVideo.jsx":"14","/home/bek/Projects/React/talguu-client/src/redux/types/index.js":"15","/home/bek/Projects/React/talguu-client/src/redux/reducer.js":"16","/home/bek/Projects/React/talguu-client/src/redux/sagas/saga.js":"17","/home/bek/Projects/React/talguu-client/src/pages/UploadAnt.jsx":"18","/home/bek/Projects/React/talguu-client/src/config/config.js":"19","/home/bek/Projects/React/talguu-client/src/components/videoPlayer/VideoPlayer.jsx":"20","/home/bek/Projects/React/talguu-client/src/pages/authentication/Login.jsx":"21","/home/bek/Projects/React/talguu-client/src/pages/yourVideos/YourVideo.jsx":"22","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Thumbnail.jsx":"23","/home/bek/Projects/React/talguu-client/src/components/videos/Video.jsx":"24","/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupPrd.jsx":"25","/home/bek/Projects/React/talguu-client/src/partials/header/Header.jsx":"26","/home/bek/Projects/React/talguu-client/src/routes/Router.js":"27","/home/bek/Projects/React/talguu-client/src/routes/privateRoute.js":"28","/home/bek/Projects/React/talguu-client/src/pages/authentication/Signup.jsx":"29","/home/bek/Projects/React/talguu-client/src/_services/video.service.js":"30","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Trailer.jsx":"31","/home/bek/Projects/React/talguu-client/src/_constants/index.js":"32","/home/bek/Projects/React/talguu-client/src/_actions/index.js":"33","/home/bek/Projects/React/talguu-client/src/_constants/user.constants.js":"34","/home/bek/Projects/React/talguu-client/src/_actions/user.actions.js":"35","/home/bek/Projects/React/talguu-client/src/_services/user.service.js":"36","/home/bek/Projects/React/talguu-client/src/_helpers/index.js":"37","/home/bek/Projects/React/talguu-client/src/_helpers/auth-header.js":"38","/home/bek/Projects/React/talguu-client/src/_helpers/history.js":"39","/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupViewer.jsx":"40","/home/bek/Projects/React/talguu-client/src/redux/reducers/index.js":"41","/home/bek/Projects/React/talguu-client/src/redux/reducers/video.reducer.js":"42","/home/bek/Projects/React/talguu-client/src/redux/reducers/authentication.reducer.js":"43","/home/bek/Projects/React/talguu-client/src/pages/NotFound.jsx":"44","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/EditUploadVideos.jsx":"45","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/Stream.jsx":"46","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamForm.jsx":"47","/home/bek/Projects/React/talguu-client/src/redux/reducers/accountReducer.js":"48","/home/bek/Projects/React/talguu-client/src/_services/axiosDefault.js":"49","/home/bek/Projects/React/talguu-client/src/redux/reducers/errorReducer.js":"50","/home/bek/Projects/React/talguu-client/src/pages/purchasedPlaylist/PurchasedPlaylist.jsx":"51","/home/bek/Projects/React/talguu-client/src/pages/videos/Videos.jsx":"52"},{"size":1358,"mtime":1612528739640,"results":"53","hashOfConfig":"54"},{"size":576,"mtime":1612768555769,"results":"55","hashOfConfig":"54"},{"size":5141,"mtime":1611642998677,"results":"56","hashOfConfig":"54"},{"size":6608,"mtime":1612272476648,"results":"57","hashOfConfig":"54"},{"size":6369,"mtime":1611733101693,"results":"58","hashOfConfig":"54"},{"size":222,"mtime":1611729720457,"results":"59","hashOfConfig":"54"},{"size":256,"mtime":1611736880270,"results":"60","hashOfConfig":"54"},{"size":4776,"mtime":1612792958885,"results":"61","hashOfConfig":"54"},{"size":5110,"mtime":1612785127367,"results":"62","hashOfConfig":"54"},{"size":301,"mtime":1612769822205,"results":"63","hashOfConfig":"54"},{"size":285,"mtime":1611731341523,"results":"64","hashOfConfig":"54"},{"size":2801,"mtime":1612785149612,"results":"65","hashOfConfig":"54"},{"size":7703,"mtime":1612785173025,"results":"66","hashOfConfig":"54"},{"size":10582,"mtime":1612792751439,"results":"67","hashOfConfig":"54"},{"size":1339,"mtime":1612766550312,"results":"68","hashOfConfig":"54"},{"size":334,"mtime":1612255279773,"results":"69","hashOfConfig":"54"},{"size":3757,"mtime":1612784741027,"results":"70","hashOfConfig":"54"},{"size":2541,"mtime":1611841300284,"results":"71","hashOfConfig":"54"},{"size":89,"mtime":1612532275859,"results":"72","hashOfConfig":"54"},{"size":1228,"mtime":1612166028750,"results":"73","hashOfConfig":"54"},{"size":4661,"mtime":1612356886427,"results":"74","hashOfConfig":"54"},{"size":1429,"mtime":1612785188542,"results":"75","hashOfConfig":"54"},{"size":3157,"mtime":1612785162585,"results":"76","hashOfConfig":"54"},{"size":532,"mtime":1612785118307,"results":"77","hashOfConfig":"54"},{"size":9404,"mtime":1612358152579,"results":"78","hashOfConfig":"54"},{"size":1330,"mtime":1612359259793,"results":"79","hashOfConfig":"54"},{"size":2646,"mtime":1612790794805,"results":"80","hashOfConfig":"54"},{"size":459,"mtime":1612335298608,"results":"81","hashOfConfig":"54"},{"size":4500,"mtime":1612785134487,"results":"82","hashOfConfig":"54"},{"size":1636,"mtime":1612773567786,"results":"83","hashOfConfig":"54"},{"size":1578,"mtime":1612528739640,"results":"84","hashOfConfig":"54"},{"size":33,"mtime":1612528739640,"results":"85","hashOfConfig":"54"},{"size":32,"mtime":1612272476584,"results":"86","hashOfConfig":"54"},{"size":647,"mtime":1612272476584,"results":"87","hashOfConfig":"54"},{"size":2398,"mtime":1612528739640,"results":"88","hashOfConfig":"54"},{"size":1595,"mtime":1612768263324,"results":"89","hashOfConfig":"54"},{"size":57,"mtime":1612272476584,"results":"90","hashOfConfig":"54"},{"size":268,"mtime":1612272476584,"results":"91","hashOfConfig":"54"},{"size":95,"mtime":1612272476584,"results":"92","hashOfConfig":"54"},{"size":12324,"mtime":1612785141880,"results":"93","hashOfConfig":"54"},{"size":397,"mtime":1612766993703,"results":"94","hashOfConfig":"54"},{"size":1383,"mtime":1612771788459,"results":"95","hashOfConfig":"54"},{"size":704,"mtime":1612528739660,"results":"96","hashOfConfig":"54"},{"size":667,"mtime":1612528739640,"results":"97","hashOfConfig":"54"},{"size":4548,"mtime":1612785152784,"results":"98","hashOfConfig":"54"},{"size":5992,"mtime":1612528739640,"results":"99","hashOfConfig":"54"},{"size":2240,"mtime":1612785145248,"results":"100","hashOfConfig":"54"},{"size":888,"mtime":1612529275929,"results":"101","hashOfConfig":"54"},{"size":319,"mtime":1612765333457,"results":"102","hashOfConfig":"54"},{"size":288,"mtime":1612766978523,"results":"103","hashOfConfig":"54"},{"size":336,"mtime":1612769815577,"results":"104","hashOfConfig":"54"},{"size":10242,"mtime":1612792795056,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"w0y2ch",{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"108"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"108"},"/home/bek/Projects/React/talguu-client/src/index.js",[],["232","233"],"/home/bek/Projects/React/talguu-client/src/App.js",["234","235","236"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./styles/color.style.css\";\r\nimport Router from \"./routes/Router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // let history = useHistory();\r\n  // const authorized = useSelector((state) => state.error.authorized);\r\n\r\n  // useEffect(() => {\r\n  //   if (history) {\r\n  //     history.push(\"/login\");\r\n  //   }\r\n  // }, authorized);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/bek/Projects/React/talguu-client/src/serviceWorker.js",[],"/home/bek/Projects/React/talguu-client/src/pages/Upload.jsx",[],["237","238"],"/home/bek/Projects/React/talguu-client/src/pages/landing/Landing.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/profile/Profile.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/home/Home.jsx",[],"/home/bek/Projects/React/talguu-client/src/partials/sideNav/SideNav.jsx",["239"],"import React from \"react\";\nimport {\n  FaVideo,\n  FaSave,\n  FaCloudUploadAlt,\n  FaStream,\n  FaCog,\n  FaUser,\n  FaFilm,\n  FaBinoculars,\n} from \"react-icons/fa\";\nimport { Tooltip } from \"antd\";\nimport \"./SideNav.css\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo512.png\";\n\nconst SideNav = () => {\n  let location = useLocation();\n  let user = localStorage.getItem(\"user\");\n  return (\n    <div className=\"container w-14 min-h-full fixed left-0 top-0 bottom-0 border-r p-1 bg-white\">\n      <ul className=\"list-disc space-y-5\">\n        <li className=\"cursor-pointer\">\n          <img src={logo} alt=\"\" className=\"rounded\" />\n        </li>\n        <li\n          className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n            location.pathname === \"/\" ? \"bg-gray-400\" : \"\"\n          }`}>\n          <Link to=\"/\">\n            <Tooltip className=\"list-tooltip\" placement=\"rightTop\" title=\"Videos\">\n              <FaVideo className={`text-3xl inline text-gray-300 hover:text-white`} />\n            </Tooltip>\n          </Link>\n        </li>\n        {/* <li\n          className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n            location.pathname === \"/watch\" ? \"bg-gray-400\" : \"\"\n          }`}>\n          <Link to=\"/watch\">\n            <Tooltip className=\"list-tooltip\" placement=\"rightTop\" title=\"Watch\">\n              <FaBinoculars className={`text-3xl inline text-gray-300 hover:text-white`} />\n            </Tooltip>\n          </Link>\n        </li> */}\n        {user ? (\n          <>\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/saved_playlist\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/saved_playlist\">\n                <Tooltip placement=\"rightTop\" title=\"Saved Playlist\">\n                  <FaSave className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/purchased_playlist\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/purchased_playlist\">\n                <Tooltip placement=\"rightTop\" title=\"Purchased Playlist\">\n                  <FaFilm className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/upload_video\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/upload_video\">\n                <Tooltip placement=\"rightTop\" title=\"Upload Video\">\n                  <FaCloudUploadAlt className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/stream_video\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/stream_video\">\n                <Tooltip placement=\"rightTop\" title=\"Stream Video\">\n                  <FaStream className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/settings\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/settings\">\n                <Tooltip placement=\"rightTop\" title=\"Settings\">\n                  <FaCog className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n            <li\n              className={`cursor-pointer flex items-center justify-center min-w-full rounded-xl h-10 hover:bg-gray-400 ${\n                location.pathname === \"/account\" ? \"bg-gray-400\" : \"\"\n              }`}>\n              <Link to=\"/account\">\n                <Tooltip placement=\"rightTop\" title=\"Account\">\n                  <FaUser className={`text-3xl inline text-gray-300 hover:text-white`} />\n                </Tooltip>\n              </Link>\n            </li>\n          </>\n        ) : (\n          \"\"\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SideNav;\n","/home/bek/Projects/React/talguu-client/src/pages/account/Account.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/savedPlaylist/SavedPlayList.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/settings/Settings.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamVideo.jsx",["240","241","242","243"],"import { Button, Menu, Modal } from \"antd\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\nimport React, { Component, useState } from \"react\";\nimport { FaCamera } from \"react-icons/fa\";\nimport { RiCamera2Fill, RiLiveFill } from \"react-icons/ri\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../partials/header/Header\";\nimport StreamForm from \"./StreamForm\";\n\nconst StreamVideo = () => {\n  const [modalVisible, setmodalVisible] = useState(true);\n  const [formVisible, setFormVisible] = useState(false);\n  var history = useHistory();\n  const handleClick = (e) => {\n    // console.log(\"click \", e);\n  };\n  const startStream = () => {\n    // history.push(\"/live_stream\")\n    setmodalVisible(false);\n    setFormVisible(true);\n  };\n  return (\n    <div>\n      <div>\n        <Header></Header>\n        <div className=\"mx-8 my-20\">\n          <Menu\n            onClick={handleClick}\n            style={{ width: 256 }}\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\">\n            <Menu.Item\n              className=\"flex items-center justify-start text-lg\"\n              onClick={() => setmodalVisible(true)}\n              key=\"1\"\n              icon={<RiCamera2Fill />}>\n              Stream\n            </Menu.Item>\n            <Menu.Item\n              className=\"flex items-center justify-start text-lg\"\n              key=\"2\"\n              icon={<RiLiveFill />}>\n              Webcam live\n            </Menu.Item>\n          </Menu>\n\n          <Modal\n            title=\"Stream live\"\n            centered\n            visible={modalVisible}\n            okText=\"Back\"\n            onOk={() => setmodalVisible(false)}\n            onCancel={() => setmodalVisible(false)}>\n            <div className=\"bg-white p-4 shadow-lg\">\n              <div className=\"\">\n                <h2 className=\"text-xl py-2 font-bold\">Stream form Software</h2>\n                <p>\n                  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\n                  Ipsum has been the industry's standard dummy text ever since the 1500s,\n                </p>\n                <Button\n                  onClick={(e) => startStream()}\n                  type=\"primary float-right right rounded-full px-6 my-4 \">\n                  Start Streaming\n                </Button>\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            title=\"Stream live\"\n            centered\n            visible={formVisible}\n            onOk={() => setFormVisible(false)}\n            onCancel={() => setFormVisible(false)}>\n            <div className=\"bg-white p-4 shadow-lg\">\n              <StreamForm />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StreamVideo;\n","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/UploadVideo.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/watchVideo/WatchVideo.jsx",["244","245","246","247"],"import React, { Component, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  GET_PAID_VIDEO_URL_ASYNC,\n  PURCHASE_VIDEO_ASYNC,\n  VIEWER_VIDEOS_ASYNC,\n} from \"../../redux/types\";\nimport { Button, Input, Tooltip, Modal, Radio, Space, Spin } from \"antd\";\nimport {\n  FaClock,\n  FaDollarSign,\n  FaHeart,\n  FaHeartBroken,\n  FaPlayCircle,\n  FaSearch,\n} from \"react-icons/fa\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport mastercard from \"../../assets/images/mastercard.png\";\nimport visa from \"../../assets/images/visa.png\";\n\nconst { Search } = Input;\n\nconst WatchVideo = () => {\n  let history = useHistory();\n  let [paymentMethod, setPaymentMethod] = useState(\"mastercard\");\n  let [playVideo, setPlayVideo] = useState(false);\n  let videoLink = useSelector((state) => state.video.video_link);\n  let [tempVideo, setTempVideo] = useState(null);\n  let [paymentModalVisible, setPaymentModalVisible] = useState(false);\n  let { vidId } = useParams();\n  let dispatch = useDispatch();\n  let currentVideo = useSelector((state) => state.video.currentVideo);\n  let viewerVideos = useSelector((state) => state.video.viewerVideos);\n\n  useEffect(() => {\n    if (vidId) {\n      dispatch({ type: GET_PAID_VIDEO_URL_ASYNC, payload: vidId });\n      dispatch({ type: VIEWER_VIDEOS_ASYNC });\n      window.scrollTo(0, 0);\n    }\n    return () => {};\n  }, [vidId]);\n\n  useEffect(() => {\n    setPlayVideo(true);\n    return () => {};\n  }, [currentVideo]);\n\n  const play = (video) => {\n    history.push(`/watch/${video.id}`);\n    history.go(0);\n  };\n\n  //   useEffect(() => {\n  //     if (videoLink) {\n\n  //     }\n  //   }, [videoLink]);\n\n  const paymentModalVisibleFunc = (value, video, event) => {\n    if (event) event.stopPropagation();\n    if (!localStorage.getItem(\"user\")) history.push(\"/login\");\n    else {\n      if (video && video.paid) {\n        history.push(`/watch/${video.id}`);\n        history.go(0);\n      } else {\n        if (value) {\n          setTempVideo(video);\n          setPaymentModalVisible(value);\n        } else setPaymentModalVisible(value);\n      }\n    }\n  };\n\n  const purchaseVideo = (id) => {\n    dispatch({ type: PURCHASE_VIDEO_ASYNC, payload: id });\n    paymentModalVisibleFunc(false);\n    play(tempVideo);\n  };\n\n  const paymentMethodChange = () => {};\n\n  const renderPaymentModal = () => {\n    return (\n      <Modal\n        className=\"max-w-xs h-auto px-5 opacity-95\"\n        centered\n        closable={false}\n        mask={false}\n        footer={null}\n        visible={paymentModalVisible}\n        onOk={() => paymentModalVisibleFunc(false)}\n        onCancel={() => paymentModalVisibleFunc(false)}>\n        <div className=\"absolute -left-8 top-1 w-16 h-16 rounded-full bg-blue-500 text-white flex items-center justify-center font-semibold\">\n          <FaDollarSign /> {0.23}\n        </div>\n        <h3 className=\"text-gray-600 uppercase text-center w-full text-lg mb-3\">Payment</h3>\n        <div>\n          <img src={tempVideo?.thumbnial} alt=\"\" />\n        </div>\n        <Radio.Group\n          onChange={paymentMethodChange}\n          value={paymentMethod}\n          className=\"w-full flex-col my-2\">\n          <Radio\n            className=\"flex items-center justify-start w-full border-t-2 border-gray-100 p-3 text-gray-600 text-ls \"\n            value=\"mastercard\">\n            <img src={mastercard} alt=\"\" className=\"h-10 ml-1\" />\n            <span className=\"ml-1\">Mastercard</span>\n          </Radio>\n\n          <Radio\n            className=\"flex items-center justify-start w-full border-t-2 border-gray-100 p-3 text-gray-600 text-ls \"\n            value=\"visa\">\n            <img src={visa} alt=\"\" className=\"h-10 ml-1\" /> <span className=\"ml-1\">Visa</span>\n          </Radio>\n        </Radio.Group>\n        <p className=\"text-gray-700 text-xs text-center w-full mb-2\">\n          Notice: Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam illo quas, facilis\n        </p>\n        <div\n          onClick={() => purchaseVideo(tempVideo.id)}\n          className=\"h-10 bg-blue-500 -mx-6 text-center text-white text-md flex items-center justify-center cursor-pointer font-semibold pay_button\">\n          Pay <FaDollarSign />\n          {0.23}\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderPlayer = (video) => {\n    // console.log(video);\n    const videoJsOptions = {\n      autoplay: true,\n      controls: true,\n      poster: video?.thumbnial,\n      aspectRatio: \"16:9\",\n      responsive: true,\n      sources: [\n        {\n          src: video ? (video.paid ? video.video_link : video.trailer) : \"\",\n          type: video.video_type,\n        },\n      ],\n    };\n    if (video) {\n      return (\n        <>\n          <div className=\"flex ml-2 mt-4 sm:max-w-full lg:max-w-3xl xl:max-w-4xl\">\n            <VideoPlayer {...videoJsOptions}></VideoPlayer>\n          </div>\n          <div className=\"flex-col ml-2 mt-4 sm:max-w-full lg:max-w-3xl xl:max-w-4xl\">\n            <div className=\"w-full flex justify-between\">\n              <div className=\"text-gray-800 lg:text-2xl text-md  text-left\">{video?.title}</div>\n              {video.paid ? (\n                \"\"\n              ) : (\n                <div className=\"py-0\">\n                  <Button\n                    type=\"primary\"\n                    onClick={(event) => paymentModalVisibleFunc(true, video, event)}\n                    className=\"mr-1 rounded-2xl text-xs px-2 py-0 opacity-80\">\n                    Watch Full Video\n                  </Button>\n                </div>\n              )}\n            </div>\n            <div className=\"flex justify-between text-gray-800 text-2xl w-full text-left\">\n              <div className=\"flex items-end\">\n                <span className=\"text-gray-400 text-lg\"> {video?.viewVount} views</span>\n                <span className=\"text-gray-600 ml-4 text-base\">\n                  {moment(video?.premiered).format(\"MMM DD, YYYY\")}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Tooltip placement=\"bottom\" title=\"Like\">\n                  <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg\">\n                    {video?.likeCount} <FaHeart className=\"ml-1\" />\n                  </span>\n                </Tooltip>\n                <Tooltip placement=\"bottom\" title=\"Dislike\">\n                  <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg ml-2\">\n                    {9} <FaHeartBroken className=\"ml-1\" />\n                  </span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  };\n\n  const onSearch = (value) => {\n    // console.log(value);\n  };\n\n  const renderVideos = () => {\n    if (viewerVideos) {\n      return viewerVideos.map((video) => {\n        return (\n          <div\n            key={video.id}\n            onClick={() => play(video)}\n            className={`flex-col w-full md:w-4/12 lg:w-full sm:w-6/12 p-2 cursor-pointer video_thumbnail self-stretch`}>\n            <div className=\"relative\">\n              <img src={video.thumbnial} alt=\"\" className=\"min-w-full min-h-full\" />\n              <div className=\"absolute thumbnail_button_container\">\n                <Tooltip placement=\"bottom\" title={video.paid ? \"\" : \"Watch Trailer\"}>\n                  <FaPlayCircle className=\"text-gray-600 thumbnail_button\" />\n                </Tooltip>\n              </div>\n              <div\n                onClick={(event) => this.saveLater(event)}\n                className=\"watch_later bg-gray-700 p-2 rounded-sm absolute right-2 top-2 bg-opacity-25\">\n                <FaClock className=\"text-white text-base\" />\n              </div>\n              <div className=\"bg-gray-600 rounded-sm absolute bottom-1 right-1 py-0 px-4 bg-opacity-40\"></div>\n              {video.paid ? (\n                \"\"\n              ) : (\n                <div className=\"absolute bottom-1 left-1 py-0 invisible watch_video_buttons\">\n                  <Button\n                    onClick={(event) => paymentModalVisibleFunc(true, video, event)}\n                    className=\"mr-1 rounded-2xl text-xs px-2 py-0 opacity-80\">\n                    Watch Full Video\n                  </Button>\n                </div>\n              )}\n              {!video.paid ? (\n                <div className=\"flex items-center bg-white text-gray-700 rounded-sm absolute top-1 left-1 py-0 px-4\">\n                  <FaDollarSign className=\"text-gray-700 text-xs\" /> {0.23}\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"flex items-center bg-white text-gray-700 rounded-sm absolute bottom-1 right-1 py-0 px-4\">\n                {moment(video?.video_duration?.split(\".\")[0], [moment.ISO_8601, \"HH:mm:ss\"]).format(\n                  \"H:m:ss\"\n                )}\n              </div>\n            </div>\n            <div className=\"flex-col\">\n              <h4 className=\"my-2 text-left text-md text-gray-600 video_title\">{video.title}</h4>\n              <div className=\"flex\">\n                <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg ml-2\">\n                  {video.viewVount} views\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n\n  const suffix = <FaSearch className=\"text-xl text-gray-300\" />;\n  return (\n    <>\n      <SideNav></SideNav>\n      <div>\n        <div className=\"pt-2 ml-14\">\n          <SideNav></SideNav>\n          <div className=\"flex ml-2 sm:max-w-full lg:max-w-3xl xl:max-w-4xl max-h-12\">\n            <Search\n              placeholder=\"Search videos here...\"\n              enterButton=\"Search\"\n              size=\"large\"\n              suffix={suffix}\n              onSearch={() => onSearch()}\n            />\n          </div>\n          {playVideo && currentVideo ? (\n            renderPlayer(currentVideo)\n          ) : (\n            <div>\n              <Space size=\"middle\">\n                <Spin size=\"large\" />\n              </Space>\n            </div>\n          )}\n          <div className=\"flex relative lg:absolute right-0  bottom-0 border-2 mt-4 lg:top-0 lg:flex-col lg:ml-0 flex-wrap lg:flex-nowrap xl:w-1/4 lg:w-1/5 lg:min-h-full border-white\">\n            {renderVideos()}\n          </div>\n        </div>\n        {renderPaymentModal()}\n      </div>\n    </>\n  );\n};\n\nexport default WatchVideo;\n","/home/bek/Projects/React/talguu-client/src/redux/types/index.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducer.js",[],"/home/bek/Projects/React/talguu-client/src/redux/sagas/saga.js",[],"/home/bek/Projects/React/talguu-client/src/pages/UploadAnt.jsx",["248"],"import React, { useState } from \"react\";\nimport { Upload, Form, Input, Button,  } from \"antd\";\nimport { RiVideoUploadFill } from \"react-icons/ri\";\n\nconst { Dragger } = Upload;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\nconst props = {\n  name: \"file\",\n  multiple: true,\n  // action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  // previewFile(file) {\n  //   console.log(\"Your upload file:\", file);\n  //   // Your process logic. Here we just mock to the same file\n  //   return fetch(\"https://next.json-generator.com/api/json/get/4ytyBoLK8\", {\n  //     method: \"POST\",\n  //     body: file,\n  //   })\n  //     .then((res) => res.json())\n  //     .then(({ thumbnail }) => thumbnail);\n  // },\n};\n\nconst UploadAnt = () => {\n  const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"Some Description\");\n  const [uploaded, setUploaded] = useState(false);\n\n  const uploadFile = (info) => {\n    setTitle(info.file.name);\n    setUploaded(true);\n   \n  };\n\n  return (\n    <div class=\"flex items-center flex-col\">\n      <Dragger\n        className=\"\"\n        {...props}\n        onChange={uploadFile}\n      >\n        <div class=\" h-64 flex flex-col justify-center items-center container mx-auto px-6 \">\n          <p className=\"text-5xl\">\n            <RiVideoUploadFill />\n          </p>\n          <p className=\"text-xl\">Click or drag file to this area to upload</p>\n          {/* <p className=\"ant-upload-hint\">\n          Support for a single or bulk upload. Strictly prohibit from uploading\n          company data or other band files\n        </p> */}\n        </div>\n      </Dragger>\n\n      {uploaded && (\n        <Form {...layout} name=\"basic\" initialValues={{ remember: true }}>\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n            valuePropName=\"title\"\n            rules={[{ required: true, message: \"Please input your username!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            valuePropName=\"description\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default UploadAnt;\n","/home/bek/Projects/React/talguu-client/src/config/config.js",[],"/home/bek/Projects/React/talguu-client/src/components/videoPlayer/VideoPlayer.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/Login.jsx",["249"],"import React from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { FaFacebook, FaGoogle, FaLock, FaUser } from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { userService } from \"../../_services/user.service\";\nimport Header from \"../../partials/header/Header\";\n\nconst Login = (props) => {\n  var history = useHistory();\n  const onFinish = (values) => {\n    // console.log(\"Received values of form: \", values);\n    if (values.email && values.password) {\n      // this.props.dispatch({ type: \"LOGIN_ASYNC\", values });\n    }\n    userService\n      .login(values)\n      .then((resp) => {\n        // console.log(resp, \"response\");\n        if (resp.success) {\n          props.dispatch({ type: \"LOGIN_ASYNC\", payload: resp });\n          history.push(\"/\");\n        } else {\n          props.dispatch({ type: \"LOGIN_FAIL\" });\n        }\n      })\n      .catch((err) => {\n        props.dispatch({ type: \"LOGIN_FAIL\" });\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex justify-center items-center h-full pt-2 mt-14\">\n        <div className=\"w-full max-w-xs flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n          <div className=\"flex justify-center flex-col items-center \">\n            <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n            <p className=\"text-sm text-purple-600 my-4\">Welcome back to Talguu </p>\n\n            <p className=\"text-2xl text-gray-700 mb-4\">Login into you Account!</p>\n            <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n              <Link to=\"/login\">\n                <Button\n                  shape=\"round\"\n                  className=\"flex items-center text-white m-1 px-4 bg-green-600\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/signup_viewer\">\n                <Button\n                  shape=\"round\"\n                  className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                  Sign Up\n                </Button>\n              </Link>\n            </div>\n          </div>\n          <div>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}>\n              <Form.Item\n                name=\"email\"\n                rules={[{ required: true, message: \"Please input your email!\" }]}>\n                <Input\n                  className=\"rounded-2xl\"\n                  prefix={<FaUser className=\"site-form-item-icon\" />}\n                  placeholder=\"E-mail Address\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: \"Please input your Password!\" }]}>\n                <Input\n                  className=\"rounded-2xl \"\n                  prefix={<FaLock className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                  <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <a className=\"login-form-forgot\" href=\"\">\n                  Forgot password\n                </a>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  shape=\"round\"\n                  className=\"login-form-button w-full bg-green-600 border-green-600\">\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n\n            <div>\n              <p className=\"my-4\">OR USING</p>\n              <div className=\"flex justify-evenly\">\n                <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                  Google\n                </Button>\n                <Button\n                  className=\"flex items-center p-2\"\n                  type=\"primary\"\n                  shape=\"round\"\n                  icon={<FaFacebook />}>\n                  Facebook\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state) {\n  const { loggingIn } = state.authentication;\n  return { loggingIn };\n}\n\nconst connectedLoginPage = connect(mapState, null)(Login);\nexport { connectedLoginPage as Login };\n// export  Login;\n","/home/bek/Projects/React/talguu-client/src/pages/yourVideos/YourVideo.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Thumbnail.jsx",[],"/home/bek/Projects/React/talguu-client/src/components/videos/Video.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupPrd.jsx",["250","251","252","253","254"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Steps } from \"antd\";\nimport {\n  FaEnvelope,\n  FaFacebook,\n  FaGoogle,\n  FaLock,\n  FaUser,\n  FaUserCircle,\n  FaMapMarkerAlt,\n  FaCheckSquare,\n  FaBuilding,\n} from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupPrd.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CREATE_PRODUCER_ASYNC } from \"../../redux/types\";\nimport Header from \"../../partials/header/Header\";\n\nconst { Step } = Steps;\n\nconst SignupPrd = () => {\n  const [formValues, setFormValues] = useState(() => {\n    return { phoneNumber: \"12341234234\" };\n  });\n  const [currentForm, setCurrentForm] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [errMessages, setErrMessage] = useState(\"\");\n  const serverErrors = useSelector((state) => state.account.errMessages);\n  const dispatch = useDispatch();\n  const createUserStatus = useSelector((state) => state.account.createUserStatus);\n\n  useEffect(() => {\n    setErrMessage(serverErrors);\n    setLoading(false);\n  }, serverErrors);\n\n  useEffect(() => {\n    if (createUserStatus == \"SUCCESSFUL\") {\n      setCurrentForm(2);\n      setLoading(false);\n      setErrMessage(\"\");\n      setFormValues(() => {\n        return { phoneNumber: \"12341234234\" };\n      });\n    }\n  }, createUserStatus);\n\n  const onPersonalFinish = (values) => {\n    setCurrentForm(1);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n  };\n\n  const onAddressFinish = (values) => {\n    setLoading(true);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n    dispatch({ type: CREATE_PRODUCER_ASYNC, payload: { ...formValues, ...values } });\n  };\n\n  const renderPersonal = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onPersonalFinish}>\n        <Form.Item\n          name=\"firstName\"\n          rules={[{ required: true, message: \"Please input your first Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"First Name*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"lastName\"\n          rules={[{ required: true, message: \"Please input your last Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"Last Name*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"companyName\">\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaBuilding className=\"site-form-item-icon\" />}\n            placeholder=\"Company Name*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"email\" rules={[{ required: true, message: \"Please input your email!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaEnvelope className=\"site-form-item-icon\" />}\n            placeholder=\"E-mail Address*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm_password\"\n          rules={[{ required: true, message: \"Please Confirm your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Confirm Password*\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-full\">\n            Next\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const goBack = () => {\n    // setState({ currentForm: 0 });\n    setCurrentForm(0);\n  };\n\n  const renderAddress = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onAddressFinish}>\n        <Form.Item\n          name=\"zipCode\"\n          rules={[{ required: true, message: \"Please input your zip code!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"Zip Code*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"city\" rules={[{ required: true, message: \"Please input your city!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"City*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"state\" rules={[{ required: true, message: \"Please input your state!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"State*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"Address\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            type=\"text\"\n            placeholder=\"Address*\"\n          />\n        </Form.Item>\n\n        <Form.Item className=\"flex justify-around\">\n          <Button\n            onClick={goBack}\n            type=\"secondary\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Back\n          </Button>\n          <Button\n            loading={loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const renderVerifyEmail = () => {\n    return (\n      <h2 className=\"w-80 text-md text-gray-600 text-center mx-auto\">\n        We have sent an email to your account. Please verify your email to login.\n        <div className=\"w-full\">\n          <Link to=\"/login\">\n            <Button type=\"primary\" shape=\"round\" className=\"flex items-center m-1 px-4 mx-auto\">\n              Login\n            </Button>\n          </Link>\n        </div>\n      </h2>\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex m-auto items-center w-auto p-8 pt-2 mt-14\">\n        <div className=\"self-start p-4 shadow-md\">\n          <Steps current={currentForm} direction=\"vertical\" className=\"bg-white h-80 p-8\">\n            <Step\n              icon={<FaUserCircle />}\n              title=\"Personal/Corporate\"\n              description=\"Fill your personal/corporate information\"\n            />\n            <Step icon={<FaMapMarkerAlt />} title=\"Address\" description=\"Fill your address\" />\n            <Step icon={<FaCheckSquare />} title=\"Verify\" description=\"Verify your email\" />\n          </Steps>\n        </div>\n        <div className=\"flex justify-center items-center h-full w-8/12 max-w-xl\">\n          {currentForm !== 2 ? (\n            <div className=\"w-full flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n              <div className=\"flex justify-center flex-col items-center \">\n                <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n\n                <p className=\"text-2xl text-gray-700 my-6\">Create Producer Account</p>\n                <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n                  <Link to=\"/login\">\n                    <Button\n                      shape=\"round\"\n                      className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                      Login\n                    </Button>\n                  </Link>\n                  <Link to=\"/signupprd\">\n                    <Button shape=\"round\" className=\"flex items-center   m-1 px-4\">\n                      Sign Up\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"w-full text-red-500 text-md text-center mb-4\">{errMessages}</div>\n              <div>\n                {currentForm === 0 ? renderPersonal() : currentForm === 1 ? renderAddress() : \"\"}\n                <div>\n                  <p className=\"my-6\">OR USING</p>\n                  <div className=\"flex justify-evenly\">\n                    <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                      Google\n                    </Button>\n                    <Button\n                      className=\"flex items-center p-2\"\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<FaFacebook />}>\n                      Facebook\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            renderVerifyEmail()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPrd;\n","/home/bek/Projects/React/talguu-client/src/partials/header/Header.jsx",["255","256"],"import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport { Button } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Header = () => {\n  let currentURL = useLocation().pathname;\n  return (\n    <div className=\"w-full fixed top-0 left-0 right-0 h-14 shadow-sm bg-white z-10 flex justify-between items-center\">\n      <div className=\"text-2xl flex items-center justify-center header_title text-gray-500\">\n        <Link to=\"/\" className=\"flex items-center\">\n          <img src=\"logo512.png\" alt=\"\" className=\"rounded h-14\" /> TALGUU\n        </Link>\n      </div>\n      <div className=\"flex max-h-10 bg-gray-100 rounded-3xl cursor-pointer\">\n        <Link to=\"/login\">\n          <Button\n            shape=\"round\"\n            className={\n              `flex items-center m-1 px-4` +\n              (currentURL !== \"/login\" ? `border-transparent bg-transparent` : ``)\n            }>\n            Login\n          </Button>\n        </Link>\n        <Link to=\"/signup_viewer\">\n          <Button\n            shape=\"round\"\n            className={\n              `flex items-center m-1 px-4` +\n              (currentURL != \"/signup_viewer\" ? `border-transparent bg-transparent` : ``)\n            }>\n            Sign Up\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/bek/Projects/React/talguu-client/src/routes/Router.js",[],"/home/bek/Projects/React/talguu-client/src/routes/privateRoute.js",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/Signup.jsx",[],"/home/bek/Projects/React/talguu-client/src/_services/video.service.js",["257","258"],"import axios from \"./axiosDefault\";\n\nimport { environment } from \"../config/config\";\n\nexport default {\n  addVideo: async function (body, onUploadProgress) {\n    try {\n      return await axios.post(`${environment}/video`, body, onUploadProgress);\n      // return user.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getVideos: async function () {\n    try {\n      const video = await axios.get(`${environment}/video`);\n      return video.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateVideo: async function (body) {\n    try {\n      const video = await axios.patch(`${environment}/video`, body);\n      return video.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  addThumbnail: async function (body) {\n    try {\n      const thumb = await axios.post(`${environment}/video/thumbnail`, body);\n      return thumb.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  getViewerVideos: async function () {\n    try {\n      const videos = await axios.get(`${environment}/video/user`);\n      // console.log(videos.data);\n      return { data: videos.data, success: true };\n    } catch (error) {\n      throw { error, success: false };\n    }\n  },\n\n  getPaidVideoUrl: async function (videoId) {\n    try {\n      const videos = await axios.get(`${environment}/video/purchase_video_url?videoId=${videoId}`);\n      return videos.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  purchaseVideo: async function (videoId) {\n    try {\n      const thumb = await axios.post(`${environment}/video/purchase`, { videoId });\n      return thumb.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Trailer.jsx",[],"/home/bek/Projects/React/talguu-client/src/_constants/index.js",[],"/home/bek/Projects/React/talguu-client/src/_actions/index.js",[],"/home/bek/Projects/React/talguu-client/src/_constants/user.constants.js",[],"/home/bek/Projects/React/talguu-client/src/_actions/user.actions.js",["259"],"import { userConstants } from '../_constants';\nimport { history } from '../_helpers';\nimport { userService } from '../_services/user.service';\n\n\n\nfunction login(username, password) {\n    return dispatch => {\n        // dispatch(request({ username }));\n        \n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT_ASYNC };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n};","/home/bek/Projects/React/talguu-client/src/_services/user.service.js",["260","261"],"import axios from \"./axiosDefault\";\nimport { environment } from \"../config/config\";\n\nfunction login({ email, password }) {\n  return axios.post(`${environment}/account/login`, { email, password }).then((user) => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    if (user.data.success) {\n      localStorage.setItem(\"user\", JSON.stringify(user.data));\n    }\n    return user.data;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"user\");\n}\n\nasync function getUser() {\n  try {\n    const user = await axios.get(`${environment}/user`);\n    return user.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/// this might help to do some intercept handle 403 401 request\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        logout();\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nasync function createProducer(data) {\n  try {\n    const user = await axios.post(`${environment}/account/producer_sign_up`, data);\n    return user.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function createViewer(data) {\n  try {\n    const user = await axios.post(`${environment}/account/viewer_sign_up`, data);\n    return user.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport const userService = {\n  login,\n  logout,\n  createProducer,\n  createViewer,\n};\n","/home/bek/Projects/React/talguu-client/src/_helpers/index.js",[],"/home/bek/Projects/React/talguu-client/src/_helpers/auth-header.js",[],"/home/bek/Projects/React/talguu-client/src/_helpers/history.js",[],["262","263"],"/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupViewer.jsx",["264","265","266","267"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Steps, DatePicker } from \"antd\";\nimport {\n  FaEnvelope,\n  FaFacebook,\n  FaGoogle,\n  FaLock,\n  FaUser,\n  FaUserCircle,\n  FaMapMarkerAlt,\n  // FaCheckSquare,\n  // FaBuilding,\n  FaMoneyCheckAlt,\n} from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupViewer.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CREATE_VIEWER_ASYNC } from \"../../redux/types\";\nimport Header from \"../../partials/header/Header\";\n\nconst { Step } = Steps;\n\nconst SignupViewer = () => {\n  const [formValues, setFormValues] = useState(() => {\n    return { phoneNumber: \"12341234234\" };\n  });\n  const [currentForm, setCurrentForm] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [viewerErrMessages, setErrMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const serverErrors = useSelector((state) => state.account.viewerErrMessages);\n  const createViewerStatus = useSelector((state) => state.account.createViewerStatus);\n\n  useEffect(() => {\n    setErrMessage(serverErrors);\n    setLoading(false);\n  }, [serverErrors]);\n\n  useEffect(() => {\n    if (createViewerStatus == \"SUCCESSFUL\") {\n      setCurrentForm(2);\n      setLoading(false);\n      setErrMessage(\"\");\n      setFormValues(() => {\n        return { phoneNumber: \"12341234234\" };\n      });\n    }\n  }, [createViewerStatus]);\n\n  const onPersonalFinish = (values) => {\n    setCurrentForm(1);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n  };\n\n  const onAddressFinish = (values) => {\n    setLoading(true);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n    dispatch({ type: CREATE_VIEWER_ASYNC, payload: { ...formValues, ...values } });\n  };\n\n  const onPaymentFinish = (values) => {\n    // console.log(values);\n  };\n\n  const renderPersonal = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"personal\"\n        initialValues={{ remember: true }}\n        onFinish={onPersonalFinish}>\n        <Form.Item\n          name=\"firstName\"\n          rules={[{ required: true, message: \"Please input your first Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"First Name*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"lastName\"\n          rules={[{ required: true, message: \"Please input your last Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"Last Name*\"\n          />\n        </Form.Item>\n        {/* <Form.Item name=\"companyName\">\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaBuilding className=\"site-form-item-icon\" />}\n            placeholder=\"Company Name\"\n          />\n        </Form.Item> */}\n        <Form.Item name=\"email\" rules={[{ required: true, message: \"Please input your email!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaEnvelope className=\"site-form-item-icon\" />}\n            placeholder=\"E-mail Address*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm_password\"\n          rules={[{ required: true, message: \"Please Confirm your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Confirm Password*\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-full\">\n            Next\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const goBack = () => {\n    // setState({ currentForm: 0 });\n    setCurrentForm(0);\n  };\n\n  const renderAddress = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"address\"\n        initialValues={{ remember: true }}\n        onFinish={onAddressFinish}>\n        <Form.Item\n          name=\"zipCode\"\n          rules={[{ required: true, message: \"Please input your zip code!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"Zip Code\"\n          />\n        </Form.Item>\n        <Form.Item name=\"city\" rules={[{ required: true, message: \"Please input your city!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"City\"\n          />\n        </Form.Item>\n        <Form.Item name=\"state\" rules={[{ required: true, message: \"Please input your state!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"State\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"Address\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            type=\"text\"\n            placeholder=\"Address\"\n          />\n        </Form.Item>\n\n        <Form.Item className=\"flex justify-around\">\n          <Button\n            onClick={goBack}\n            type=\"secondary\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Back\n          </Button>\n          <Button\n            loading={loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const onYearChange = (event) => {\n    // console.log(event);\n  };\n\n  const renderPayment = () => {\n    return (\n      <h2 className=\"w-80 text-md text-gray-600 text-center mx-auto\">\n        We have sent an email to your account. Please verify your email to login.\n        <div className=\"w-full\">\n          <Link to=\"/login\">\n            <Button type=\"primary\" shape=\"round\" className=\"flex items-center m-1 px-4 mx-auto\">\n              Login\n            </Button>\n          </Link>\n        </div>\n      </h2>\n\n      // <div className=\"w-96\">\n      //   <div className=\"flex justify-center flex-col items-center \">\n      //     <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n      //     <p className=\"text-2xl text-gray-700 my-6\">Payment Information</p>\n      //   </div>\n      //   <div className=\"w-full text-red-500 text-md text-center mb-4\">{viewerErrMessages}</div>\n      //   <div className=\"w-full flex flex-col justify-center p-4 py-8 shadow-md rounded-2xl bg-white\">\n      //     <Form\n      //       layout=\"vertical\"\n      //       name=\"personal\"\n      //       initialValues={{ remember: true }}\n      //       onFinish={onPaymentFinish}>\n      //       <Form.Item\n      //         name=\"name\"\n      //         label=\"Name of Credit Card\"\n      //         rules={[{ required: true, message: \"Please input your Password!\" }]}>\n      //         <Input\n      //           className=\"rounded-2xl \"\n      //           prefix={<FaUser className=\"site-form-item-icon\" />}\n      //           type=\"text\"\n      //           placeholder=\"Name of Credit Card\"\n      //         />\n      //       </Form.Item>\n\n      //       <Form.Item\n      //         name=\"creditCard\"\n      //         label=\"Credit Card Number\"\n      //         rules={[{ required: true, message: \"Please input your Password!\" }]}>\n      //         <Input className=\"rounded-2xl\" type=\"text\" placeholder=\"Credit Card Number\" />\n      //       </Form.Item>\n      //       <div className=\"flex items-center justify-between\">\n      //         <Form.Item\n      //           className=\"w-1/2 pr-2\"\n      //           name=\"exp_year\"\n      //           label=\"Expires on\"\n      //           rules={[{ required: true, message: \"Please input exp date\" }]}>\n      //           <DatePicker\n      //             className=\"rounded-2xl\"\n      //             onChange={onYearChange}\n      //             picker=\"month\"\n      //             placeholder=\"Select exp date\"\n      //           />\n      //         </Form.Item>\n      //         <Form.Item\n      //           className=\"w-1/2 pl-2\"\n      //           name=\"cvc\"\n      //           label=\"CVC\"\n      //           rules={[{ required: true, message: \"Please input CVC number\" }]}>\n      //           <Input className=\"rounded-2xl\" type=\"text\" placeholder=\"CVC\" />\n      //         </Form.Item>\n      //       </div>\n      //       <Form.Item>\n      //         <Button\n      //           type=\"primary\"\n      //           htmlType=\"submit\"\n      //           shape=\"round\"\n      //           className=\"login-form-button w-full\">\n      //           Submit\n      //         </Button>\n      //       </Form.Item>\n      //     </Form>\n      //   </div>\n      // </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex m-auto items-center w-auto p-8 pt-2 mt-14\">\n        <div className=\"self-start p-4 shadow-md\">\n          <Steps current={currentForm} direction=\"vertical\" className=\"bg-white h-80 p-8\">\n            <Step\n              icon={<FaUserCircle />}\n              title=\"Personal/Corporate\"\n              description=\"Fill your personal/corporate information\"\n            />\n            <Step icon={<FaMapMarkerAlt />} title=\"Address\" description=\"Fill your address\" />\n            <Step\n              icon={<FaMoneyCheckAlt />}\n              title=\"Payment\"\n              description=\"Fill your payment information\"\n            />\n          </Steps>\n        </div>\n        <div className=\"flex justify-center items-center h-full w-8/12 max-w-xl\">\n          {currentForm !== 2 ? (\n            <div className=\"w-full flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n              <div className=\"flex justify-center flex-col items-center \">\n                <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n\n                <p className=\"text-2xl text-gray-700 my-6\">Create a New Account</p>\n                <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n                  <Link to=\"/login\">\n                    <Button\n                      shape=\"round\"\n                      className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                      Login\n                    </Button>\n                  </Link>\n                  <Link to=\"/signup_viewer\">\n                    <Button shape=\"round\" className=\"flex items-center   m-1 px-4\">\n                      Sign Up\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"w-full text-red-500 text-md text-center mb-4\">\n                {viewerErrMessages}\n              </div>\n              <div>\n                {currentForm === 0 ? renderPersonal() : currentForm === 1 ? renderAddress() : \"\"}\n                <div>\n                  <p className=\"my-6\">OR USING</p>\n                  <div className=\"flex justify-evenly\">\n                    <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                      Google\n                    </Button>\n                    <Button\n                      className=\"flex items-center p-2\"\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<FaFacebook />}>\n                      Facebook\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            renderPayment()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupViewer;\n","/home/bek/Projects/React/talguu-client/src/redux/reducers/index.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/video.reducer.js",["268"],"import {\n  GET_PAID_VIDEO_URL_FAILURE,\n  GET_PAID_VIDEO_URL_SUCCESS,\n  PURCHASE_VIDEO_FAILURE,\n  PURCHASE_VIDEO_SUCCESS,\n  VIDEO_FAILURE,\n  VIDEO_READY,\n  VIDEO_SUCCESS,\n  VIEWER_VIDEOS_FAILURE,\n  VIEWER_VIDEOS_SUCCESS,\n} from \"../types\";\n\nconst INITIAL_STATE = {\n  video: {},\n  videoStatus: null,\n  errMessages: null,\n  viewerVideos: [],\n  currentVideo: null,\n  video_link: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  // console.log(\"action-red\", action);\n  switch (action.type) {\n    case VIDEO_READY:\n      return { ...state, video: action.payload, videoStatus: \"READY\" };\n    case VIDEO_SUCCESS:\n      return { ...state, user: action.payload, videoStatus: \"SUCCESSFUL\" };\n    case VIDEO_FAILURE:\n      return { ...state, errMessages: action.payload, videoStatus: \"FAILED\" };\n    case VIEWER_VIDEOS_SUCCESS:\n      return { ...state, viewerVideos: action.payload };\n    case VIEWER_VIDEOS_FAILURE:\n      return { ...state, errMessages: action.payload };\n    case GET_PAID_VIDEO_URL_SUCCESS:\n      return { ...state, currentVideo: action.payload };\n    case GET_PAID_VIDEO_URL_FAILURE:\n      return { ...state, errMessages: action.payload };\n    case PURCHASE_VIDEO_SUCCESS:\n      return { ...state, video_link: action.video_link };\n    case PURCHASE_VIDEO_FAILURE:\n      return { ...state, errMessages: action.payload };\n    default:\n      return state;\n  }\n};\n","/home/bek/Projects/React/talguu-client/src/redux/reducers/authentication.reducer.js",[],"/home/bek/Projects/React/talguu-client/src/pages/NotFound.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/EditUploadVideos.jsx",["269","270","271","272"],"import { Button, Form, Input, PageHeader } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nimport { FaInfo, FaTag, FaUser } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport Header from \"../../partials/header/Header\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport videoService from \"../../_services/video.service\";\nimport Thumbnail from \"./Thumbnail\";\nimport Trailer from \"./Trailer\";\n\nconst EditUploadVideos = (props) => {\n  var history = useHistory();\n  const [video, setVideo] = useState(props.location.state);\n  const [title, setTitle] = useState(video.title);\n  const [describe, setDescribe] = useState(video.describe);\n\n  const publishVideo = () => {\n    // console.log(\"title,describe\", title, describe);\n\n    videoService\n      .updateVideo({ id: video.id, title: title, describe: describe })\n      .then((data) => {\n        if (data[0]) {\n          history.push(\"/your_video\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    aspectRatio: \"16:9\",\n    responsive: true,\n    sources: [\n      {\n        src: video.videoLink,\n        type: \"video/mkv\",\n      },\n    ],\n  };\n  return (\n    <div className=\"mx-2 my-20 relative\">\n      {/* <SideNav /> */}\n      <Header />\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.goBack()}\n        title=\"Edit Video\"\n        subTitle=\"Add extra additional infromation\"\n      />\n      <Button className=\"absolute top-3 right-2\" onClick={publishVideo} key=\"1\" type=\"primary\">\n        Publish Changes\n      </Button>\n      <div className=\"flex mx-4\">\n        <div className=\"w-full\">\n          <Form\n            layout=\"vertical\"\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n              title: video.title,\n              description: video.describe,\n            }}\n            onFinish={publishVideo}>\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              className=\"text-lg text-gray-600\"\n              rules={[{ required: true, message: \"Please input your Title!\" }]}>\n              <Input\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                className=\"rounded-lg text-gray-700 text-lg p-2\"\n                placeholder=\"Title*\"\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n              name=\"description\"\n              rules={[{ required: false, message: \"Please input your Description!\" }]}>\n              <TextArea\n                value={describe}\n                onChange={(e) => setDescribe(e.target.value)}\n                className=\"rounded-lg text-gray-700 text-lg p-2\"\n                prefix={<FaInfo className=\"site-form-item-icon\" />}\n                placeholder=\"Description*\"\n              />\n            </Form.Item>\n\n            {/* <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"round\"\n                className=\"login-form-button w-full\"\n              >\n                Next\n              </Button>\n            </Form.Item> */}\n          </Form>\n          <div>\n            <div className=\"flex flex-col items-start justify-start\">\n              <h2 className=\"text-lg\">Thumbnail</h2>\n              <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                Select or upload a picture that shows what's in your video. A good thumbnail stands\n                out and draws viewers' attention.\n              </h3>\n              <Thumbnail video={video.id} thumbnails={video.thumbnial} />\n            </div>\n            <div className=\"flex flex-col items-start justify-start\">\n              <h2 className=\"text-lg\">Trailer</h2>\n              <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                Select or upload a trailer that shows what's in your video in a minute. A good\n                trailer draws viewers' attention.\n              </h3>\n              <Trailer />\n            </div>\n          </div>\n        </div>\n        <div className=\"w-3/4 p-4 \">\n          <VideoPlayer {...videoJsOptions} />\n\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUploadVideos;\n","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/Stream.jsx",["273","274","275","276","277","278","279","280"],"import { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, PageHeader, Select } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nimport { FaInfo, FaTag, FaUser } from \"react-icons/fa\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport Header from \"../../partials/header/Header\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport videoService from \"../../_services/video.service\";\nimport Thumbnail from \"../uploadVideo/Thumbnail\";\nimport { Option } from \"antd/lib/mentions\";\n\nconst Stream = (props) => {\n  const [property, setProperty] = useState(props.location.state);\n  const [title, setTitle] = useState(property.title);\n  const [describe, setDescribe] = useState(property.description);\n  const [streamKey, setStreamKey] = useState(\"u8ks8Qiq91kjIUH71JK90hkjs7\");\n  const [streamURL, setStreamURL] = useState(\"rmtn://talguu.com/live.go\");\n  var history = useHistory();\n  const goLive = () => {};\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    aspectRatio: \"16:9\",\n    responsive: true,\n    sources: [\n      {\n        src: \"\",\n        type: \"video/mkv\",\n      },\n    ],\n  };\n  return (\n    <div>\n      <div className=\"mx-2 my-20 relative\">\n        {/* <SideNav /> */}\n        <Header />\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => history.goBack()}\n          title=\"Live\"\n          subTitle=\"Add extra additional infromation\"\n        />\n        <Button\n          className=\"absolute top-3 right-2\"\n          onClick={(e) => history.push(\"/your_video\")}\n          key=\"1\"\n          type=\"danger\"\n        >\n          End Stream\n        </Button>\n        <div className=\"flex mx-4\">\n          <div className=\"w-2/5 p-4 \">\n            <VideoPlayer {...videoJsOptions} />\n\n            <div className=\"flex flex-col items-start my-4\">\n              <h2 className=\"text-lg font-semibold\">Stream Setting</h2>\n              <div className=\"flex flex-col items-start my-2\">\n                <span>Stream Key</span>\n                <Input value={streamKey} suffix=\"Copy\" />\n              </div>\n              <div className=\"flex flex-col items-start my-2\">\n                <span>Stream URL</span>\n                <Input value={streamURL} suffix=\"Copy\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"w-3/5\">\n            <Form\n              layout=\"vertical\"\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{\n                remember: true,\n                title: property.title,\n                description: property.description,\n                select:property.select\n              }}\n              onFinish={goLive}\n            >\n              <Form.Item\n                label=\"Title\"\n                name=\"title\"\n                className=\"text-lg text-gray-600\"\n                rules={[\n                  { required: true, message: \"Please input your Title!\" },\n                ]}\n              >\n                <Input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  className=\"rounded-lg text-gray-700 text-lg p-2\"\n                  placeholder=\"Title*\"\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Description\"\n                name=\"description\"\n                rules={[\n                  {\n                    required: false,\n                    message: \"Please input your Description!\",\n                  },\n                ]}\n              >\n                <TextArea\n                  value={describe}\n                  onChange={(e) => setDescribe(e.target.value)}\n                  className=\"rounded-lg text-gray-700 text-lg p-2\"\n                  prefix={<FaInfo className=\"site-form-item-icon\" />}\n                  placeholder=\"Description*\"\n                />\n              </Form.Item>\n              <Form.Item\n                className=\"w-64 flex\"\n                name=\"select\"\n                label=\"Select audience\"\n                hasFeedback\n                rules={[\n                  { required: true, message: \"Please select your country!\" },\n                ]}\n              >\n                <Select placeholder=\"Select audience\"  className=\"rounded-lg w-20 text-gray-700 text-base p-2\">\n                  <Option value=\"private\">Private</Option>\n                  <Option value=\"public\">Public</Option>\n                </Select>\n              </Form.Item>\n\n              {/* <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"round\"\n                className=\"login-form-button w-full\"\n              >\n                Next\n              </Button>\n            </Form.Item> */}\n            </Form>\n\n            <div>\n              <div className=\"flex flex-col items-start justify-start\">\n                <h2 className=\"text-lg\">Thumbnail</h2>\n                <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                  Select or upload a picture that shows what's in your video. A\n                  good thumbnail stands out and draws viewers' attention.\n                </h3>\n                {/* <Thumbnail video={video.id} thumbnails={video.thumbnial} /> */}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"w-1/5 flex flex-col items-center\">\n            <h2 className=\"font-semibold text-base\">Stream Analytics</h2>\n            <div>\n              <div className=\"rounded-lg w-32 p-4 m-2 shadow-lg bg-white \">\n                <b>0</b>\n                <p>Current Views </p>\n              </div>\n              <div className=\"rounded-lg w-32 p-4 m-2 shadow-lg bg-white \">\n                <b>0</b>\n                <p>Current Likes </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamForm.jsx",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/accountReducer.js",["281"],"import {\n  CREATE_PRODUCER_SUCCESS,\n  CREATE_PRODUCER_FAILURE,\n  CREATE_VIEWER_FAILURE,\n  CREATE_VIEWER_SUCCESS,\n} from \"../types\";\n\nconst INITIAL_STATE = {\n  user: {},\n  createUserStatus: null,\n  errMessages: null,\n  createViewerStatus: null,\n  viewerErrMessages: null,\n  viewerUser: {},\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_PRODUCER_SUCCESS:\n      return { ...state, user: action.payload, createUserStatus: \"SUCCESSFUL\" };\n    case CREATE_PRODUCER_FAILURE:\n      return { ...state, errMessages: action.payload, createUserStatus: \"FAILED\" };\n    case CREATE_VIEWER_SUCCESS:\n      return { ...state, viewerUser: action.payload, createViewerStatus: \"SUCCESSFUL\" };\n    case CREATE_VIEWER_FAILURE:\n      return { ...state, viewerErrMessages: action.payload, createViewerStatus: \"FAILED\" };\n    default:\n      return state;\n  }\n};\n","/home/bek/Projects/React/talguu-client/src/_services/axiosDefault.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/errorReducer.js",["282"],"import { ERROR_UNAUTHORIZED } from \"../types\";\n\nconst INITIAL_STATE = {\n  authorized: true,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ERROR_UNAUTHORIZED:\n      return { ...state, authorized: false };\n    default:\n      return state;\n  }\n};\n","/home/bek/Projects/React/talguu-client/src/pages/purchasedPlaylist/PurchasedPlaylist.jsx",["283"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\n\nfunction PurchasedPlaylist(props) {\n  return (\n    <div>\n      <SideNav></SideNav>\n      <div>Hello from purchased playlist</div>\n    </div>\n  );\n}\n\nPurchasedPlaylist.propTypes = {};\n\nexport default PurchasedPlaylist;\n","/home/bek/Projects/React/talguu-client/src/pages/videos/Videos.jsx",["284"],"import React, { Component } from \"react\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport { connect } from \"react-redux\";\nimport { Button, Input, Tooltip, Modal, Radio } from \"antd\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport {\n  FaPlayCircle,\n  FaSearch,\n  FaHeart,\n  FaHeartBroken,\n  FaClock,\n  FaDollarSign,\n} from \"react-icons/fa\";\nimport \"./Videos.css\";\nimport moment from \"moment\";\n\nimport mastercard from \"../../assets/images/mastercard.png\";\nimport visa from \"../../assets/images/visa.png\";\nimport {\n  GET_PAID_VIDEO_URL_ASYNC,\n  PURCHASE_VIDEO_ASYNC,\n  VIEWER_VIDEOS_ASYNC,\n} from \"../../redux/types\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nexport class Videos extends Component {\n  state = {\n    videos: [],\n    currentVideo: null,\n    autoplay: false,\n    paymentModalVisible: false,\n    tempVideo: {},\n    paymentMethod: \"mastercard\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.playerRef = React.createRef();\n    props.dispatch({ type: VIEWER_VIDEOS_ASYNC, payload: \"\" });\n    // console.log(this.props.viewerVideos);\n  }\n\n  paymentMethodChange = (event) => {\n    this.setState({ paymentMethod: event.target.value });\n  };\n\n  playVideo = (video) => {\n    this.props.history.push(`/watch/${video.id}`);\n  };\n\n  playTrailer = (video) => {\n    // console.log(video);\n  };\n\n  onSearch = (value) => {\n    // console.log(value);\n  };\n\n  scrollToPlayer = () => this.playerRef.current.scrollIntoView();\n\n  saveLater = (event) => {\n    event.stopPropagation();\n  };\n\n  paymentModalVisible = (value, video, event) => {\n    if (event) event.stopPropagation();\n    if (!localStorage.getItem(\"user\")) this.props.history.push(\"/login\");\n    if (video && video.paid) {\n      this.props.history.push(`/watch/${video.id}`);\n    } else {\n      if (value) this.setState({ paymentModalVisible: value, tempVideo: video });\n      else this.setState({ paymentModalVisible: value });\n    }\n  };\n\n  purchaseVideo = (id) => {\n    this.props.dispatch({ type: PURCHASE_VIDEO_ASYNC, payload: id });\n    this.playVideo({ ...this.state.tempVideo, video_link: this.props.video_link });\n    this.paymentModalVisible(false);\n  };\n\n  renderVideos = () => {\n    return this.props.viewerVideos.map((video) => {\n      return (\n        <div\n          key={video.id}\n          onClick={() => this.playVideo(video)}\n          className={`flex-col w-full md:w-4/12 lg:w-3/12 ${\n            this.state.currentVideo ? \"lg:w-full\" : \"\"\n          } sm:w-6/12 p-2 cursor-pointer video_thumbnail self-stretch`}>\n          <div className=\"relative\">\n            <img src={video.thumbnial} alt=\"\" className=\"min-w-full min-h-full\" />\n            <div className=\"absolute thumbnail_button_container\">\n              <Tooltip placement=\"bottom\" title={video.paid ? \"\" : \"Watch Trailer\"}>\n                <FaPlayCircle className=\"text-gray-600 thumbnail_button\" />\n              </Tooltip>\n            </div>\n            <div\n              onClick={(event) => this.saveLater(event)}\n              className=\"watch_later bg-gray-700 p-2 rounded-sm absolute right-2 top-2 bg-opacity-25\">\n              <FaClock className=\"text-white text-base\" />\n            </div>\n            <div className=\"bg-gray-600 rounded-sm absolute bottom-1 right-1 py-0 px-4 bg-opacity-40\"></div>\n            {video.paid ? (\n              \"\"\n            ) : (\n              <div className=\"absolute bottom-1 left-1 py-0 invisible watch_video_buttons\">\n                <Button\n                  onClick={(event) => this.paymentModalVisible(true, video, event)}\n                  className=\"mr-1 rounded-2xl text-xs px-2 py-0 opacity-80\">\n                  Watch Full Video\n                </Button>\n              </div>\n            )}\n            {!video.paid ? (\n              <div className=\"flex items-center bg-white text-gray-700 rounded-sm absolute top-1 left-1 py-0 px-4\">\n                <FaDollarSign className=\"text-gray-700 text-xs\" /> {0.23}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"flex items-center bg-white text-gray-700 rounded-sm absolute bottom-1 right-1 py-0 px-4\">\n              {moment(video?.video_duration?.split(\".\")[0], [moment.ISO_8601, \"HH:mm:ss\"]).format(\n                \"H:m:ss\"\n              )}\n            </div>\n          </div>\n          <div className=\"flex-col\">\n            <h4 className=\"my-2 text-left text-md text-gray-600 video_title\">{video.title}</h4>\n            <div className=\"flex\">\n              <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg ml-2\">\n                {video.viewVount} views\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderPaymentModal = () => {\n    return (\n      <Modal\n        className=\"max-w-xs h-auto px-5 opacity-95\"\n        centered\n        closable={false}\n        mask={false}\n        footer={null}\n        visible={this.state.paymentModalVisible}\n        onOk={() => this.paymentModalVisible(false)}\n        onCancel={() => this.paymentModalVisible(false)}>\n        <div className=\"absolute -left-8 top-1 w-16 h-16 rounded-full bg-blue-500 text-white flex items-center justify-center font-semibold\">\n          <FaDollarSign /> {0.23}\n        </div>\n        <h3 className=\"text-gray-600 uppercase text-center w-full text-lg mb-3\">Payment</h3>\n        <div>\n          <img src={this.state.tempVideo.thumbnial} alt=\"\" />\n        </div>\n        <Radio.Group\n          onChange={this.paymentMethodChange}\n          value={this.state.paymentMethod}\n          className=\"w-full flex-col my-2\">\n          <Radio\n            className=\"flex items-center justify-start w-full border-t-2 border-gray-100 p-3 text-gray-600 text-ls \"\n            value=\"mastercard\">\n            <img src={mastercard} alt=\"\" className=\"h-10 ml-1\" />\n            <span className=\"ml-1\">Mastercard</span>\n          </Radio>\n\n          <Radio\n            className=\"flex items-center justify-start w-full border-t-2 border-gray-100 p-3 text-gray-600 text-ls \"\n            value=\"visa\">\n            <img src={visa} alt=\"\" className=\"h-10 ml-1\" /> <span className=\"ml-1\">Visa</span>\n          </Radio>\n        </Radio.Group>\n        <p className=\"text-gray-700 text-xs text-center w-full mb-2\">\n          Notice: Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam illo quas, facilis\n        </p>\n        <div\n          onClick={() => this.purchaseVideo(this.state.tempVideo.id)}\n          className=\"h-10 bg-blue-500 -mx-6 text-center text-white text-md flex items-center justify-center cursor-pointer font-semibold pay_button\">\n          Pay <FaDollarSign />\n          {0.23}\n        </div>\n      </Modal>\n    );\n  };\n\n  renderPlayer() {\n    const videoJsOptions = {\n      autoplay: this.state.autoplay,\n      controls: true,\n      thubnail: this.state.currentVideo ? this.state.currentVideo.thumbnial : \"\",\n      aspectRatio: \"16:9\",\n      responsive: true,\n      sources: [\n        {\n          src: this.state.currentVideo\n            ? this.props.video_link\n              ? this.state.currentVideo.video_link\n              : this.state.currentVideo.trailer\n            : \"\",\n          type: \"video/mp4\",\n        },\n      ],\n    };\n    if (this.state.currentVideo) {\n      return (\n        <>\n          <div className=\"flex ml-2 mt-4 sm:max-w-full lg:max-w-3xl xl:max-w-4xl\">\n            <VideoPlayer {...videoJsOptions}></VideoPlayer>\n          </div>\n          <div className=\"flex-col ml-2 mt-4 sm:max-w-full lg:max-w-3xl xl:max-w-4xl\">\n            <div className=\"text-gray-800 lg:text-2xl text-md w-full text-left\">\n              {this.state.currentVideo?.title}\n            </div>\n            <div className=\"flex justify-between text-gray-800 text-2xl w-full text-left\">\n              <div className=\"flex items-end\">\n                <span className=\"text-gray-400 text-lg\">\n                  {\" \"}\n                  {this.state.currentVideo?.viewVount} views\n                </span>\n                <span className=\"text-gray-600 ml-4 text-base\">\n                  {moment(this.state.currentVideo?.premiered).format(\"MMM DD, YYYY\")}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Tooltip placement=\"bottom\" title=\"Like\">\n                  <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg\">\n                    {this.state.currentVideo?.likeCount} <FaHeart className=\"ml-1\" />\n                  </span>\n                </Tooltip>\n                <Tooltip placement=\"bottom\" title=\"Dislike\">\n                  <span className=\"flex items-center text-gray-400 cursor-pointer hover:text-blue-400 text-lg ml-2\">\n                    {9} <FaHeartBroken className=\"ml-1\" />\n                  </span>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n\n  render = () => {\n    const suffix = <FaSearch className=\"text-xl text-gray-300\" />;\n    return (\n      <div className=\"pt-2 ml-14\" ref={this.playerRef}>\n        <SideNav></SideNav>\n        <div className=\"flex ml-2 sm:max-w-full lg:max-w-3xl xl:max-w-4xl max-h-12\">\n          <Search\n            placeholder=\"Search videos here...\"\n            enterButton=\"Search\"\n            size=\"large\"\n            suffix={suffix}\n            onSearch={this.onSearch}\n          />\n        </div>\n        {this.renderPlayer()}\n        {this.state.currentVideo ? (\n          <div className=\"flex relative lg:absolute right-0  bottom-0 border-2 mt-4 lg:top-0 lg:flex-col lg:ml-0 flex-wrap lg:flex-nowrap xl:w-1/4 lg:w-1/5 lg:min-h-full border-white\">\n            {this.renderVideos()}\n          </div>\n        ) : (\n          <div className=\"flex relative right-0  bottom-0 border-2 lg:ml-0 flex-wrap xl:w-3/12 min-h-full w-auto lg:min-w-full lg:max-w-full border-white\">\n            {this.renderVideos()}\n          </div>\n        )}\n        {this.renderPaymentModal()}\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    viewerVideos: state.video.viewerVideos,\n    video_link: state.video.video_link,\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(Videos));\n",{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"293","line":5,"column":10,"nodeType":"291","messageId":"292","endLine":5,"endColumn":21},{"ruleId":"289","severity":1,"message":"294","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":20},{"ruleId":"285","replacedBy":"295"},{"ruleId":"287","replacedBy":"296"},{"ruleId":"289","severity":1,"message":"297","line":10,"column":3,"nodeType":"291","messageId":"292","endLine":10,"endColumn":15},{"ruleId":"289","severity":1,"message":"298","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":16},{"ruleId":"289","severity":1,"message":"299","line":3,"column":17,"nodeType":"291","messageId":"292","endLine":3,"endColumn":26},{"ruleId":"289","severity":1,"message":"300","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":18},{"ruleId":"289","severity":1,"message":"301","line":13,"column":7,"nodeType":"291","messageId":"292","endLine":13,"endColumn":14},{"ruleId":"289","severity":1,"message":"299","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"302","line":28,"column":23,"nodeType":"291","messageId":"292","endLine":28,"endColumn":39},{"ruleId":"289","severity":1,"message":"303","line":30,"column":7,"nodeType":"291","messageId":"292","endLine":30,"endColumn":16},{"ruleId":"304","severity":1,"message":"305","line":45,"column":6,"nodeType":"306","endLine":45,"endColumn":13,"suggestions":"307"},{"ruleId":"289","severity":1,"message":"308","line":30,"column":10,"nodeType":"291","messageId":"292","endLine":30,"endColumn":15},{"ruleId":"309","severity":1,"message":"310","line":91,"column":17,"nodeType":"311","endLine":91,"endColumn":58},{"ruleId":"304","severity":1,"message":"312","line":37,"column":6,"nodeType":"291","endLine":37,"endColumn":18},{"ruleId":"304","severity":1,"message":"313","line":37,"column":6,"nodeType":"291","endLine":37,"endColumn":18,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":40,"column":26,"nodeType":"317","messageId":"318","endLine":40,"endColumn":28},{"ruleId":"304","severity":1,"message":"312","line":48,"column":6,"nodeType":"291","endLine":48,"endColumn":22},{"ruleId":"304","severity":1,"message":"319","line":48,"column":6,"nodeType":"291","endLine":48,"endColumn":22,"suggestions":"320"},{"ruleId":"289","severity":1,"message":"299","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"315","severity":1,"message":"321","line":31,"column":27,"nodeType":"317","messageId":"318","endLine":31,"endColumn":29},{"ruleId":"322","severity":1,"message":"323","line":5,"column":1,"nodeType":"324","endLine":67,"endColumn":3},{"ruleId":"325","severity":1,"message":"326","line":46,"column":7,"nodeType":"327","messageId":"328","endLine":46,"endColumn":39},{"ruleId":"289","severity":1,"message":"329","line":24,"column":14,"nodeType":"291","messageId":"292","endLine":24,"endColumn":21},{"ruleId":"289","severity":1,"message":"330","line":19,"column":16,"nodeType":"291","messageId":"292","endLine":19,"endColumn":23},{"ruleId":"289","severity":1,"message":"331","line":29,"column":10,"nodeType":"291","messageId":"292","endLine":29,"endColumn":24},{"ruleId":"285","replacedBy":"332"},{"ruleId":"287","replacedBy":"333"},{"ruleId":"289","severity":1,"message":"334","line":2,"column":38,"nodeType":"291","messageId":"292","endLine":2,"endColumn":48},{"ruleId":"315","severity":1,"message":"316","line":42,"column":28,"nodeType":"317","messageId":"318","endLine":42,"endColumn":30},{"ruleId":"289","severity":1,"message":"335","line":69,"column":9,"nodeType":"291","messageId":"292","endLine":69,"endColumn":24},{"ruleId":"289","severity":1,"message":"336","line":213,"column":9,"nodeType":"291","messageId":"292","endLine":213,"endColumn":21},{"ruleId":"322","severity":1,"message":"337","line":22,"column":1,"nodeType":"324","endLine":46,"endColumn":3},{"ruleId":"289","severity":1,"message":"338","line":4,"column":18,"nodeType":"291","messageId":"292","endLine":4,"endColumn":23},{"ruleId":"289","severity":1,"message":"339","line":4,"column":25,"nodeType":"291","messageId":"292","endLine":4,"endColumn":31},{"ruleId":"289","severity":1,"message":"340","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":15},{"ruleId":"289","severity":1,"message":"341","line":15,"column":17,"nodeType":"291","messageId":"292","endLine":15,"endColumn":25},{"ruleId":"289","severity":1,"message":"338","line":5,"column":18,"nodeType":"291","messageId":"292","endLine":5,"endColumn":23},{"ruleId":"289","severity":1,"message":"339","line":5,"column":25,"nodeType":"291","messageId":"292","endLine":5,"endColumn":31},{"ruleId":"289","severity":1,"message":"340","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":15},{"ruleId":"289","severity":1,"message":"342","line":9,"column":8,"nodeType":"291","messageId":"292","endLine":9,"endColumn":20},{"ruleId":"289","severity":1,"message":"343","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":17},{"ruleId":"289","severity":1,"message":"344","line":14,"column":20,"nodeType":"291","messageId":"292","endLine":14,"endColumn":31},{"ruleId":"289","severity":1,"message":"345","line":17,"column":21,"nodeType":"291","messageId":"292","endLine":17,"endColumn":33},{"ruleId":"289","severity":1,"message":"346","line":18,"column":21,"nodeType":"291","messageId":"292","endLine":18,"endColumn":33},{"ruleId":"322","severity":1,"message":"337","line":17,"column":1,"nodeType":"324","endLine":30,"endColumn":3},{"ruleId":"322","severity":1,"message":"337","line":7,"column":1,"nodeType":"324","endLine":14,"endColumn":3},{"ruleId":"289","severity":1,"message":"347","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":17},{"ruleId":"289","severity":1,"message":"348","line":20,"column":3,"nodeType":"291","messageId":"292","endLine":20,"endColumn":27},"no-native-reassign",["349"],"no-negated-in-lhs",["350"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useHistory' is defined but never used.",["349"],["350"],"'FaBinoculars' is defined but never used.","'MenuItem' is defined but never used.","'Component' is defined but never used.","'FaCamera' is defined but never used.","'history' is assigned a value but never used.","'setPaymentMethod' is assigned a value but never used.","'videoLink' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["351"],"'title' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'serverErrors'. Either include it or remove the dependency array.",["352"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'createUserStatus'. Either include it or remove the dependency array.",["353"],"Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'request' is defined but never used.","'getUser' is defined but never used.","'handleResponse' is defined but never used.",["349"],["350"],"'DatePicker' is defined but never used.","'onPaymentFinish' is assigned a value but never used.","'onYearChange' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'FaTag' is defined but never used.","'FaUser' is defined but never used.","'SideNav' is defined but never used.","'setVideo' is assigned a value but never used.","'videoService' is defined but never used.","'Thumbnail' is defined but never used.","'setProperty' is assigned a value but never used.","'setStreamKey' is assigned a value but never used.","'setStreamURL' is assigned a value but never used.","'PropTypes' is defined but never used.","'GET_PAID_VIDEO_URL_ASYNC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},"Update the dependencies array to be: [dispatch, vidId]",{"range":"360","text":"361"},"Update the dependencies array to be: [serverErrors]",{"range":"362","text":"363"},"Update the dependencies array to be: [createUserStatus]",{"range":"364","text":"365"},[1549,1556],"[dispatch, vidId]",[1124,1136],"[serverErrors]",[1375,1391],"[createUserStatus]"]