[{"/home/bek/Projects/React/talguu-client/src/index.js":"1","/home/bek/Projects/React/talguu-client/src/App.js":"2","/home/bek/Projects/React/talguu-client/src/serviceWorker.js":"3","/home/bek/Projects/React/talguu-client/src/pages/Upload.jsx":"4","/home/bek/Projects/React/talguu-client/src/pages/landing/Landing.jsx":"5","/home/bek/Projects/React/talguu-client/src/pages/profile/Profile.jsx":"6","/home/bek/Projects/React/talguu-client/src/pages/home/Home.jsx":"7","/home/bek/Projects/React/talguu-client/src/partials/sideNav/SideNav.jsx":"8","/home/bek/Projects/React/talguu-client/src/pages/account/Account.jsx":"9","/home/bek/Projects/React/talguu-client/src/pages/savedPlaylist/SavedPlayList.jsx":"10","/home/bek/Projects/React/talguu-client/src/pages/settings/Settings.jsx":"11","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamVideo.jsx":"12","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/UploadVideo.jsx":"13","/home/bek/Projects/React/talguu-client/src/pages/watchVideo/WatchVideo.jsx":"14","/home/bek/Projects/React/talguu-client/src/redux/types/index.js":"15","/home/bek/Projects/React/talguu-client/src/redux/reducer.js":"16","/home/bek/Projects/React/talguu-client/src/redux/sagas/saga.js":"17","/home/bek/Projects/React/talguu-client/src/pages/UploadAnt.jsx":"18","/home/bek/Projects/React/talguu-client/src/config/config.js":"19","/home/bek/Projects/React/talguu-client/src/components/videoPlayer/VideoPlayer.jsx":"20","/home/bek/Projects/React/talguu-client/src/pages/authentication/Login.jsx":"21","/home/bek/Projects/React/talguu-client/src/services/user.service.js":"22","/home/bek/Projects/React/talguu-client/src/pages/yourVideos/YourVideo.jsx":"23","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Thumbnail.jsx":"24","/home/bek/Projects/React/talguu-client/src/components/videos/Video.jsx":"25","/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupPrd.jsx":"26","/home/bek/Projects/React/talguu-client/src/partials/header/Header.jsx":"27","/home/bek/Projects/React/talguu-client/src/routes/Router.js":"28","/home/bek/Projects/React/talguu-client/src/routes/privateRoute.js":"29","/home/bek/Projects/React/talguu-client/src/pages/authentication/Signup.jsx":"30","/home/bek/Projects/React/talguu-client/src/_services/video.service.js":"31","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Trailer.jsx":"32","/home/bek/Projects/React/talguu-client/src/_constants/index.js":"33","/home/bek/Projects/React/talguu-client/src/_actions/index.js":"34","/home/bek/Projects/React/talguu-client/src/_constants/user.constants.js":"35","/home/bek/Projects/React/talguu-client/src/_actions/user.actions.js":"36","/home/bek/Projects/React/talguu-client/src/_services/user.service.js":"37","/home/bek/Projects/React/talguu-client/src/_helpers/index.js":"38","/home/bek/Projects/React/talguu-client/src/_helpers/auth-header.js":"39","/home/bek/Projects/React/talguu-client/src/_helpers/history.js":"40","/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupViewer.jsx":"41","/home/bek/Projects/React/talguu-client/src/redux/reducers/index.js":"42","/home/bek/Projects/React/talguu-client/src/redux/reducers/video.reducer.js":"43","/home/bek/Projects/React/talguu-client/src/redux/reducers/authentication.reducer.js":"44","/home/bek/Projects/React/talguu-client/src/pages/NotFound.jsx":"45","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/EditUploadVideos.jsx":"46","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/Stream.jsx":"47","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamForm.jsx":"48","/home/bek/Projects/React/talguu-client/src/redux/reducers/accountReducer.js":"49","/home/bek/Projects/React/talguu-client/src/_services/axiosDefault.js":"50","/home/bek/Projects/React/talguu-client/src/redux/reducers/errorReducer.js":"51"},{"size":1358,"mtime":1612528739640,"results":"52","hashOfConfig":"53"},{"size":576,"mtime":1612768555769,"results":"54","hashOfConfig":"53"},{"size":5141,"mtime":1611642998677,"results":"55","hashOfConfig":"53"},{"size":6608,"mtime":1612272476648,"results":"56","hashOfConfig":"53"},{"size":6369,"mtime":1611733101693,"results":"57","hashOfConfig":"53"},{"size":222,"mtime":1611729720457,"results":"58","hashOfConfig":"53"},{"size":256,"mtime":1611736880270,"results":"59","hashOfConfig":"53"},{"size":3381,"mtime":1611733057677,"results":"60","hashOfConfig":"53"},{"size":5199,"mtime":1612528739640,"results":"61","hashOfConfig":"53"},{"size":301,"mtime":1611731424216,"results":"62","hashOfConfig":"53"},{"size":285,"mtime":1611731341523,"results":"63","hashOfConfig":"53"},{"size":2892,"mtime":1612528739640,"results":"64","hashOfConfig":"53"},{"size":8040,"mtime":1612528739644,"results":"65","hashOfConfig":"53"},{"size":10252,"mtime":1612768419510,"results":"66","hashOfConfig":"53"},{"size":1339,"mtime":1612766550312,"results":"67","hashOfConfig":"53"},{"size":334,"mtime":1612255279773,"results":"68","hashOfConfig":"53"},{"size":3701,"mtime":1612768658105,"results":"69","hashOfConfig":"53"},{"size":2541,"mtime":1611841300284,"results":"70","hashOfConfig":"53"},{"size":89,"mtime":1612532275859,"results":"71","hashOfConfig":"53"},{"size":1228,"mtime":1612166028750,"results":"72","hashOfConfig":"53"},{"size":4661,"mtime":1612356886427,"results":"73","hashOfConfig":"53"},{"size":892,"mtime":1612529613110,"results":"74","hashOfConfig":"53"},{"size":1482,"mtime":1612528739644,"results":"75","hashOfConfig":"53"},{"size":3169,"mtime":1612528739640,"results":"76","hashOfConfig":"53"},{"size":529,"mtime":1612170249842,"results":"77","hashOfConfig":"53"},{"size":9404,"mtime":1612358152579,"results":"78","hashOfConfig":"53"},{"size":1330,"mtime":1612359259793,"results":"79","hashOfConfig":"53"},{"size":2386,"mtime":1612529055554,"results":"80","hashOfConfig":"53"},{"size":459,"mtime":1612335298608,"results":"81","hashOfConfig":"53"},{"size":4497,"mtime":1612528739660,"results":"82","hashOfConfig":"53"},{"size":1633,"mtime":1612766432071,"results":"83","hashOfConfig":"53"},{"size":1578,"mtime":1612528739640,"results":"84","hashOfConfig":"53"},{"size":33,"mtime":1612528739640,"results":"85","hashOfConfig":"53"},{"size":32,"mtime":1612272476584,"results":"86","hashOfConfig":"53"},{"size":647,"mtime":1612272476584,"results":"87","hashOfConfig":"53"},{"size":2398,"mtime":1612528739640,"results":"88","hashOfConfig":"53"},{"size":1595,"mtime":1612768263324,"results":"89","hashOfConfig":"53"},{"size":57,"mtime":1612272476584,"results":"90","hashOfConfig":"53"},{"size":268,"mtime":1612272476584,"results":"91","hashOfConfig":"53"},{"size":95,"mtime":1612272476584,"results":"92","hashOfConfig":"53"},{"size":12318,"mtime":1612429256765,"results":"93","hashOfConfig":"53"},{"size":397,"mtime":1612766993703,"results":"94","hashOfConfig":"53"},{"size":1368,"mtime":1612602011560,"results":"95","hashOfConfig":"53"},{"size":704,"mtime":1612528739660,"results":"96","hashOfConfig":"53"},{"size":667,"mtime":1612528739640,"results":"97","hashOfConfig":"53"},{"size":4649,"mtime":1612528739640,"results":"98","hashOfConfig":"53"},{"size":5992,"mtime":1612528739640,"results":"99","hashOfConfig":"53"},{"size":2332,"mtime":1612528739640,"results":"100","hashOfConfig":"53"},{"size":888,"mtime":1612529275929,"results":"101","hashOfConfig":"53"},{"size":319,"mtime":1612765333457,"results":"102","hashOfConfig":"53"},{"size":288,"mtime":1612766978523,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"w0y2ch",{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bek/Projects/React/talguu-client/src/index.js",[],["222","223"],"/home/bek/Projects/React/talguu-client/src/App.js",["224","225","226"],"/home/bek/Projects/React/talguu-client/src/serviceWorker.js",[],"/home/bek/Projects/React/talguu-client/src/pages/Upload.jsx",[],["227","228"],"/home/bek/Projects/React/talguu-client/src/pages/landing/Landing.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/profile/Profile.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/home/Home.jsx",[],"/home/bek/Projects/React/talguu-client/src/partials/sideNav/SideNav.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/account/Account.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/savedPlaylist/SavedPlayList.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/settings/Settings.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamVideo.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/UploadVideo.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/watchVideo/WatchVideo.jsx",[],"/home/bek/Projects/React/talguu-client/src/redux/types/index.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducer.js",[],"/home/bek/Projects/React/talguu-client/src/redux/sagas/saga.js",[],"/home/bek/Projects/React/talguu-client/src/pages/UploadAnt.jsx",["229"],"import React, { useState } from \"react\";\nimport { Upload, Form, Input, Button,  } from \"antd\";\nimport { RiVideoUploadFill } from \"react-icons/ri\";\n\nconst { Dragger } = Upload;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\nconst props = {\n  name: \"file\",\n  multiple: true,\n  // action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  // previewFile(file) {\n  //   console.log(\"Your upload file:\", file);\n  //   // Your process logic. Here we just mock to the same file\n  //   return fetch(\"https://next.json-generator.com/api/json/get/4ytyBoLK8\", {\n  //     method: \"POST\",\n  //     body: file,\n  //   })\n  //     .then((res) => res.json())\n  //     .then(({ thumbnail }) => thumbnail);\n  // },\n};\n\nconst UploadAnt = () => {\n  const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"Some Description\");\n  const [uploaded, setUploaded] = useState(false);\n\n  const uploadFile = (info) => {\n    setTitle(info.file.name);\n    setUploaded(true);\n   \n  };\n\n  return (\n    <div class=\"flex items-center flex-col\">\n      <Dragger\n        className=\"\"\n        {...props}\n        onChange={uploadFile}\n      >\n        <div class=\" h-64 flex flex-col justify-center items-center container mx-auto px-6 \">\n          <p className=\"text-5xl\">\n            <RiVideoUploadFill />\n          </p>\n          <p className=\"text-xl\">Click or drag file to this area to upload</p>\n          {/* <p className=\"ant-upload-hint\">\n          Support for a single or bulk upload. Strictly prohibit from uploading\n          company data or other band files\n        </p> */}\n        </div>\n      </Dragger>\n\n      {uploaded && (\n        <Form {...layout} name=\"basic\" initialValues={{ remember: true }}>\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n            valuePropName=\"title\"\n            rules={[{ required: true, message: \"Please input your username!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            valuePropName=\"description\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default UploadAnt;\n","/home/bek/Projects/React/talguu-client/src/config/config.js",[],"/home/bek/Projects/React/talguu-client/src/components/videoPlayer/VideoPlayer.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/Login.jsx",["230"],"import React from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { FaFacebook, FaGoogle, FaLock, FaUser } from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { userService } from \"../../_services/user.service\";\nimport Header from \"../../partials/header/Header\";\n\nconst Login = (props) => {\n  var history = useHistory();\n  const onFinish = (values) => {\n    // console.log(\"Received values of form: \", values);\n    if (values.email && values.password) {\n      // this.props.dispatch({ type: \"LOGIN_ASYNC\", values });\n    }\n    userService\n      .login(values)\n      .then((resp) => {\n        // console.log(resp, \"response\");\n        if (resp.success) {\n          props.dispatch({ type: \"LOGIN_ASYNC\", payload: resp });\n          history.push(\"/\");\n        } else {\n          props.dispatch({ type: \"LOGIN_FAIL\" });\n        }\n      })\n      .catch((err) => {\n        props.dispatch({ type: \"LOGIN_FAIL\" });\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex justify-center items-center h-full pt-2 mt-14\">\n        <div className=\"w-full max-w-xs flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n          <div className=\"flex justify-center flex-col items-center \">\n            <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n            <p className=\"text-sm text-purple-600 my-4\">Welcome back to Talguu </p>\n\n            <p className=\"text-2xl text-gray-700 mb-4\">Login into you Account!</p>\n            <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n              <Link to=\"/login\">\n                <Button\n                  shape=\"round\"\n                  className=\"flex items-center text-white m-1 px-4 bg-green-600\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/signup_viewer\">\n                <Button\n                  shape=\"round\"\n                  className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                  Sign Up\n                </Button>\n              </Link>\n            </div>\n          </div>\n          <div>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}>\n              <Form.Item\n                name=\"email\"\n                rules={[{ required: true, message: \"Please input your email!\" }]}>\n                <Input\n                  className=\"rounded-2xl\"\n                  prefix={<FaUser className=\"site-form-item-icon\" />}\n                  placeholder=\"E-mail Address\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: \"Please input your Password!\" }]}>\n                <Input\n                  className=\"rounded-2xl \"\n                  prefix={<FaLock className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                  <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <a className=\"login-form-forgot\" href=\"\">\n                  Forgot password\n                </a>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  shape=\"round\"\n                  className=\"login-form-button w-full bg-green-600 border-green-600\">\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n\n            <div>\n              <p className=\"my-4\">OR USING</p>\n              <div className=\"flex justify-evenly\">\n                <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                  Google\n                </Button>\n                <Button\n                  className=\"flex items-center p-2\"\n                  type=\"primary\"\n                  shape=\"round\"\n                  icon={<FaFacebook />}>\n                  Facebook\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state) {\n  const { loggingIn } = state.authentication;\n  return { loggingIn };\n}\n\nconst connectedLoginPage = connect(mapState, null)(Login);\nexport { connectedLoginPage as Login };\n// export  Login;\n","/home/bek/Projects/React/talguu-client/src/services/user.service.js",["231"],"import axios from \"axios\";\nimport { environment } from \"../config/config\";\n\nexport default {\n  getUser: async function () {\n    try {\n      const user = await axios.get(`${environment}/user`);\n      return user.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  login: async function (data) {\n    try {\n      const user = await axios.post(`${environment}/account/login`, data);\n      return user.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  createProducer: async function (data) {\n    try {\n      const user = await axios.post(`${environment}/account/producer_sign_up`, data);\n      return user.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  createViewer: async function (data) {\n    try {\n      const user = await axios.post(`${environment}/account/viewer_sign_up`, data);\n      return user.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n",["232","233"],"/home/bek/Projects/React/talguu-client/src/pages/yourVideos/YourVideo.jsx",["234","235","236","237"],"import React, { Component } from \"react\";\nimport { Menu } from \"antd\";\nimport Video from \"../../components/videos/Video\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport videoService from \"../../services/video.service\";\nimport { FaTimes, FaVideo } from \"react-icons/fa\";\nimport { RiTimeFill } from \"react-icons/ri\";\nconst { SubMenu } = Menu;\nexport class YourVideo extends Component {\n  state = {\n    videos: [],\n    current: \"mail\",\n  };\n  \n  handleClick = (e) => {\n    console.log(\"click \", e);\n    this.setState({ current: e.key });\n  };\n  componentDidMount() {\n    this.getVideos();\n  }\n  getVideos = () => {\n    videoService\n      .getVideos()\n      .then((data) => {\n        console.log(\"data\", data);\n        this.setState({ videos: data });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <div className=\"m-12\">\n        <SideNav></SideNav>\n        <div className=\"m-6 w-full\">\n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            className=\"\"\n          >\n            <Menu.Item key=\"mail\">Watched Videos</Menu.Item>\n            <Menu.Item key=\"app\">Videos</Menu.Item>\n            <Menu.Item key=\"video\">Videos</Menu.Item>\n          </Menu>\n        </div>\n        <div className=\"m-2 flex flex-wrap\">\n          {this.state.videos.map((item) => {\n            return <Video {...item} width={400} height={100} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default YourVideo;\n","/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Thumbnail.jsx",[],"/home/bek/Projects/React/talguu-client/src/components/videos/Video.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupPrd.jsx",["238","239","240","241","242"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Steps } from \"antd\";\nimport {\n  FaEnvelope,\n  FaFacebook,\n  FaGoogle,\n  FaLock,\n  FaUser,\n  FaUserCircle,\n  FaMapMarkerAlt,\n  FaCheckSquare,\n  FaBuilding,\n} from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupPrd.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CREATE_PRODUCER_ASYNC } from \"../../redux/types\";\nimport Header from \"../../partials/header/Header\";\n\nconst { Step } = Steps;\n\nconst SignupPrd = () => {\n  const [formValues, setFormValues] = useState(() => {\n    return { phoneNumber: \"12341234234\" };\n  });\n  const [currentForm, setCurrentForm] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [errMessages, setErrMessage] = useState(\"\");\n  const serverErrors = useSelector((state) => state.account.errMessages);\n  const dispatch = useDispatch();\n  const createUserStatus = useSelector((state) => state.account.createUserStatus);\n\n  useEffect(() => {\n    setErrMessage(serverErrors);\n    setLoading(false);\n  }, serverErrors);\n\n  useEffect(() => {\n    if (createUserStatus == \"SUCCESSFUL\") {\n      setCurrentForm(2);\n      setLoading(false);\n      setErrMessage(\"\");\n      setFormValues(() => {\n        return { phoneNumber: \"12341234234\" };\n      });\n    }\n  }, createUserStatus);\n\n  const onPersonalFinish = (values) => {\n    setCurrentForm(1);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n  };\n\n  const onAddressFinish = (values) => {\n    setLoading(true);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n    dispatch({ type: CREATE_PRODUCER_ASYNC, payload: { ...formValues, ...values } });\n  };\n\n  const renderPersonal = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onPersonalFinish}>\n        <Form.Item\n          name=\"firstName\"\n          rules={[{ required: true, message: \"Please input your first Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"First Name*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"lastName\"\n          rules={[{ required: true, message: \"Please input your last Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"Last Name*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"companyName\">\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaBuilding className=\"site-form-item-icon\" />}\n            placeholder=\"Company Name*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"email\" rules={[{ required: true, message: \"Please input your email!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaEnvelope className=\"site-form-item-icon\" />}\n            placeholder=\"E-mail Address*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm_password\"\n          rules={[{ required: true, message: \"Please Confirm your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Confirm Password*\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-full\">\n            Next\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const goBack = () => {\n    // setState({ currentForm: 0 });\n    setCurrentForm(0);\n  };\n\n  const renderAddress = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onAddressFinish}>\n        <Form.Item\n          name=\"zipCode\"\n          rules={[{ required: true, message: \"Please input your zip code!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"Zip Code*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"city\" rules={[{ required: true, message: \"Please input your city!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"City*\"\n          />\n        </Form.Item>\n        <Form.Item name=\"state\" rules={[{ required: true, message: \"Please input your state!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"State*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"Address\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            type=\"text\"\n            placeholder=\"Address*\"\n          />\n        </Form.Item>\n\n        <Form.Item className=\"flex justify-around\">\n          <Button\n            onClick={goBack}\n            type=\"secondary\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Back\n          </Button>\n          <Button\n            loading={loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const renderVerifyEmail = () => {\n    return (\n      <h2 className=\"w-80 text-md text-gray-600 text-center mx-auto\">\n        We have sent an email to your account. Please verify your email to login.\n        <div className=\"w-full\">\n          <Link to=\"/login\">\n            <Button type=\"primary\" shape=\"round\" className=\"flex items-center m-1 px-4 mx-auto\">\n              Login\n            </Button>\n          </Link>\n        </div>\n      </h2>\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex m-auto items-center w-auto p-8 pt-2 mt-14\">\n        <div className=\"self-start p-4 shadow-md\">\n          <Steps current={currentForm} direction=\"vertical\" className=\"bg-white h-80 p-8\">\n            <Step\n              icon={<FaUserCircle />}\n              title=\"Personal/Corporate\"\n              description=\"Fill your personal/corporate information\"\n            />\n            <Step icon={<FaMapMarkerAlt />} title=\"Address\" description=\"Fill your address\" />\n            <Step icon={<FaCheckSquare />} title=\"Verify\" description=\"Verify your email\" />\n          </Steps>\n        </div>\n        <div className=\"flex justify-center items-center h-full w-8/12 max-w-xl\">\n          {currentForm !== 2 ? (\n            <div className=\"w-full flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n              <div className=\"flex justify-center flex-col items-center \">\n                <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n\n                <p className=\"text-2xl text-gray-700 my-6\">Create Producer Account</p>\n                <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n                  <Link to=\"/login\">\n                    <Button\n                      shape=\"round\"\n                      className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                      Login\n                    </Button>\n                  </Link>\n                  <Link to=\"/signupprd\">\n                    <Button shape=\"round\" className=\"flex items-center   m-1 px-4\">\n                      Sign Up\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"w-full text-red-500 text-md text-center mb-4\">{errMessages}</div>\n              <div>\n                {currentForm === 0 ? renderPersonal() : currentForm === 1 ? renderAddress() : \"\"}\n                <div>\n                  <p className=\"my-6\">OR USING</p>\n                  <div className=\"flex justify-evenly\">\n                    <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                      Google\n                    </Button>\n                    <Button\n                      className=\"flex items-center p-2\"\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<FaFacebook />}>\n                      Facebook\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            renderVerifyEmail()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPrd;\n","/home/bek/Projects/React/talguu-client/src/partials/header/Header.jsx",["243","244"],"import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport { Button } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Header = () => {\n  let currentURL = useLocation().pathname;\n  return (\n    <div className=\"w-full fixed top-0 left-0 right-0 h-14 shadow-sm bg-white z-10 flex justify-between items-center\">\n      <div className=\"text-2xl flex items-center justify-center header_title text-gray-500\">\n        <Link to=\"/\" className=\"flex items-center\">\n          <img src=\"logo512.png\" alt=\"\" className=\"rounded h-14\" /> TALGUU\n        </Link>\n      </div>\n      <div className=\"flex max-h-10 bg-gray-100 rounded-3xl cursor-pointer\">\n        <Link to=\"/login\">\n          <Button\n            shape=\"round\"\n            className={\n              `flex items-center m-1 px-4` +\n              (currentURL !== \"/login\" ? `border-transparent bg-transparent` : ``)\n            }>\n            Login\n          </Button>\n        </Link>\n        <Link to=\"/signup_viewer\">\n          <Button\n            shape=\"round\"\n            className={\n              `flex items-center m-1 px-4` +\n              (currentURL != \"/signup_viewer\" ? `border-transparent bg-transparent` : ``)\n            }>\n            Sign Up\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/bek/Projects/React/talguu-client/src/routes/Router.js",[],"/home/bek/Projects/React/talguu-client/src/routes/privateRoute.js",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/Signup.jsx",["245"],"import React, { Component } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { FaEnvelope, FaFacebook, FaGoogle, FaLock, FaUser } from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nexport class Signup extends Component {\n  state = {};\n\n  onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    // userService\n    //   .login(values)\n    //   .then((resp) => {\n    //     console.log(resp);\n    //   })\n    //   .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex justify-center items-center h-full\">\n          <div className=\"w-full max-w-xs flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n            <div className=\"flex justify-center flex-col items-center \">\n              <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n\n              <p className=\"text-2xl text-gray-700 my-6\">Create a New Account</p>\n              <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n                <Link to=\"/login\">\n                  <Button\n                    shape=\"round\"\n                    className=\"flex items-center text-white m-1 px-4 bg-green-600\">\n                    Login\n                  </Button>\n                </Link>\n                <Link to=\"/signup\">\n                  <Button\n                    shape=\"round\"\n                    className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                    Sign Up\n                  </Button>\n                </Link>\n              </div>\n            </div>\n            <div>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}>\n                <Form.Item\n                  name=\"fullName\"\n                  rules={[{ required: true, message: \"Please input your Full Name!\" }]}>\n                  <Input\n                    className=\"rounded-2xl\"\n                    prefix={<FaUser className=\"site-form-item-icon\" />}\n                    placeholder=\"Full Name\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"email\"\n                  rules={[{ required: true, message: \"Please input your email!\" }]}>\n                  <Input\n                    className=\"rounded-2xl\"\n                    prefix={<FaEnvelope className=\"site-form-item-icon\" />}\n                    placeholder=\"E-mail Address\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  rules={[{ required: true, message: \"Please input your Password!\" }]}>\n                  <Input\n                    className=\"rounded-2xl \"\n                    prefix={<FaLock className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"confrim_password\"\n                  rules={[{ required: true, message: \"Please Confirm your Password!\" }]}>\n                  <Input\n                    className=\"rounded-2xl \"\n                    prefix={<FaLock className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                  />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    shape=\"round\"\n                    className=\"login-form-button w-full bg-green-600 border-green-600\">\n                    Sign Up\n                  </Button>\n                </Form.Item>\n              </Form>\n\n              <div>\n                <p className=\"my-6\">OR USING</p>\n                <div className=\"flex justify-evenly\">\n                  <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                    Google\n                  </Button>\n                  <Button\n                    className=\"flex items-center p-2\"\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<FaFacebook />}>\n                    Facebook\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","/home/bek/Projects/React/talguu-client/src/_services/video.service.js",["246","247"],"/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/Trailer.jsx",[],"/home/bek/Projects/React/talguu-client/src/_constants/index.js",[],"/home/bek/Projects/React/talguu-client/src/_actions/index.js",[],"/home/bek/Projects/React/talguu-client/src/_constants/user.constants.js",[],"/home/bek/Projects/React/talguu-client/src/_actions/user.actions.js",["248"],"import { userConstants } from '../_constants';\nimport { history } from '../_helpers';\nimport { userService } from '../_services/user.service';\n\n\n\nfunction login(username, password) {\n    return dispatch => {\n        // dispatch(request({ username }));\n        \n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT_ASYNC };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n};","/home/bek/Projects/React/talguu-client/src/_services/user.service.js",["249","250"],"/home/bek/Projects/React/talguu-client/src/_helpers/index.js",[],"/home/bek/Projects/React/talguu-client/src/_helpers/auth-header.js",[],"/home/bek/Projects/React/talguu-client/src/_helpers/history.js",[],"/home/bek/Projects/React/talguu-client/src/pages/authentication/SignupViewer.jsx",["251","252","253","254"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Steps, DatePicker } from \"antd\";\nimport {\n  FaEnvelope,\n  FaFacebook,\n  FaGoogle,\n  FaLock,\n  FaUser,\n  FaUserCircle,\n  FaMapMarkerAlt,\n  // FaCheckSquare,\n  // FaBuilding,\n  FaMoneyCheckAlt,\n} from \"react-icons/fa\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignupViewer.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CREATE_VIEWER_ASYNC } from \"../../redux/types\";\nimport Header from \"../../partials/header/Header\";\n\nconst { Step } = Steps;\n\nconst SignupViewer = () => {\n  const [formValues, setFormValues] = useState(() => {\n    return { phoneNumber: \"12341234234\" };\n  });\n  const [currentForm, setCurrentForm] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [viewerErrMessages, setErrMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const serverErrors = useSelector((state) => state.account.viewerErrMessages);\n  const createViewerStatus = useSelector((state) => state.account.createViewerStatus);\n\n  useEffect(() => {\n    setErrMessage(serverErrors);\n    setLoading(false);\n  }, [serverErrors]);\n\n  useEffect(() => {\n    if (createViewerStatus == \"SUCCESSFUL\") {\n      setCurrentForm(2);\n      setLoading(false);\n      setErrMessage(\"\");\n      setFormValues(() => {\n        return { phoneNumber: \"12341234234\" };\n      });\n    }\n  }, [createViewerStatus]);\n\n  const onPersonalFinish = (values) => {\n    setCurrentForm(1);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n  };\n\n  const onAddressFinish = (values) => {\n    setLoading(true);\n    setFormValues((prevValue) => {\n      return { ...prevValue, ...values };\n    });\n    setErrMessage(\"\");\n    dispatch({ type: CREATE_VIEWER_ASYNC, payload: { ...formValues, ...values } });\n  };\n\n  const onPaymentFinish = (values) => {\n    console.log(values);\n  };\n\n  const renderPersonal = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"personal\"\n        initialValues={{ remember: true }}\n        onFinish={onPersonalFinish}>\n        <Form.Item\n          name=\"firstName\"\n          rules={[{ required: true, message: \"Please input your first Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"First Name*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"lastName\"\n          rules={[{ required: true, message: \"Please input your last Name!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaUser className=\"site-form-item-icon\" />}\n            placeholder=\"Last Name*\"\n          />\n        </Form.Item>\n        {/* <Form.Item name=\"companyName\">\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaBuilding className=\"site-form-item-icon\" />}\n            placeholder=\"Company Name\"\n          />\n        </Form.Item> */}\n        <Form.Item name=\"email\" rules={[{ required: true, message: \"Please input your email!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaEnvelope className=\"site-form-item-icon\" />}\n            placeholder=\"E-mail Address*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password*\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm_password\"\n          rules={[{ required: true, message: \"Please Confirm your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaLock className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Confirm Password*\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-full\">\n            Next\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const goBack = () => {\n    // setState({ currentForm: 0 });\n    setCurrentForm(0);\n  };\n\n  const renderAddress = () => {\n    return (\n      <Form\n        layout=\"vertical\"\n        name=\"address\"\n        initialValues={{ remember: true }}\n        onFinish={onAddressFinish}>\n        <Form.Item\n          name=\"zipCode\"\n          rules={[{ required: true, message: \"Please input your zip code!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"Zip Code\"\n          />\n        </Form.Item>\n        <Form.Item name=\"city\" rules={[{ required: true, message: \"Please input your city!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"City\"\n          />\n        </Form.Item>\n        <Form.Item name=\"state\" rules={[{ required: true, message: \"Please input your state!\" }]}>\n          <Input\n            className=\"rounded-2xl\"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            placeholder=\"State\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"Address\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}>\n          <Input\n            className=\"rounded-2xl \"\n            prefix={<FaMapMarkerAlt className=\"site-form-item-icon\" />}\n            type=\"text\"\n            placeholder=\"Address\"\n          />\n        </Form.Item>\n\n        <Form.Item className=\"flex justify-around\">\n          <Button\n            onClick={goBack}\n            type=\"secondary\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Back\n          </Button>\n          <Button\n            loading={loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"round\"\n            className=\"login-form-button w-5/12\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  const onYearChange = (event) => {\n    console.log(event);\n  };\n\n  const renderPayment = () => {\n    return (\n      <h2 className=\"w-80 text-md text-gray-600 text-center mx-auto\">\n        We have sent an email to your account. Please verify your email to login.\n        <div className=\"w-full\">\n          <Link to=\"/login\">\n            <Button type=\"primary\" shape=\"round\" className=\"flex items-center m-1 px-4 mx-auto\">\n              Login\n            </Button>\n          </Link>\n        </div>\n      </h2>\n\n      // <div className=\"w-96\">\n      //   <div className=\"flex justify-center flex-col items-center \">\n      //     <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n      //     <p className=\"text-2xl text-gray-700 my-6\">Payment Information</p>\n      //   </div>\n      //   <div className=\"w-full text-red-500 text-md text-center mb-4\">{viewerErrMessages}</div>\n      //   <div className=\"w-full flex flex-col justify-center p-4 py-8 shadow-md rounded-2xl bg-white\">\n      //     <Form\n      //       layout=\"vertical\"\n      //       name=\"personal\"\n      //       initialValues={{ remember: true }}\n      //       onFinish={onPaymentFinish}>\n      //       <Form.Item\n      //         name=\"name\"\n      //         label=\"Name of Credit Card\"\n      //         rules={[{ required: true, message: \"Please input your Password!\" }]}>\n      //         <Input\n      //           className=\"rounded-2xl \"\n      //           prefix={<FaUser className=\"site-form-item-icon\" />}\n      //           type=\"text\"\n      //           placeholder=\"Name of Credit Card\"\n      //         />\n      //       </Form.Item>\n\n      //       <Form.Item\n      //         name=\"creditCard\"\n      //         label=\"Credit Card Number\"\n      //         rules={[{ required: true, message: \"Please input your Password!\" }]}>\n      //         <Input className=\"rounded-2xl\" type=\"text\" placeholder=\"Credit Card Number\" />\n      //       </Form.Item>\n      //       <div className=\"flex items-center justify-between\">\n      //         <Form.Item\n      //           className=\"w-1/2 pr-2\"\n      //           name=\"exp_year\"\n      //           label=\"Expires on\"\n      //           rules={[{ required: true, message: \"Please input exp date\" }]}>\n      //           <DatePicker\n      //             className=\"rounded-2xl\"\n      //             onChange={onYearChange}\n      //             picker=\"month\"\n      //             placeholder=\"Select exp date\"\n      //           />\n      //         </Form.Item>\n      //         <Form.Item\n      //           className=\"w-1/2 pl-2\"\n      //           name=\"cvc\"\n      //           label=\"CVC\"\n      //           rules={[{ required: true, message: \"Please input CVC number\" }]}>\n      //           <Input className=\"rounded-2xl\" type=\"text\" placeholder=\"CVC\" />\n      //         </Form.Item>\n      //       </div>\n      //       <Form.Item>\n      //         <Button\n      //           type=\"primary\"\n      //           htmlType=\"submit\"\n      //           shape=\"round\"\n      //           className=\"login-form-button w-full\">\n      //           Submit\n      //         </Button>\n      //       </Form.Item>\n      //     </Form>\n      //   </div>\n      // </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex m-auto items-center w-auto p-8 pt-2 mt-14\">\n        <div className=\"self-start p-4 shadow-md\">\n          <Steps current={currentForm} direction=\"vertical\" className=\"bg-white h-80 p-8\">\n            <Step\n              icon={<FaUserCircle />}\n              title=\"Personal/Corporate\"\n              description=\"Fill your personal/corporate information\"\n            />\n            <Step icon={<FaMapMarkerAlt />} title=\"Address\" description=\"Fill your address\" />\n            <Step\n              icon={<FaMoneyCheckAlt />}\n              title=\"Payment\"\n              description=\"Fill your payment information\"\n            />\n          </Steps>\n        </div>\n        <div className=\"flex justify-center items-center h-full w-8/12 max-w-xl\">\n          {currentForm !== 2 ? (\n            <div className=\"w-full flex flex-col justify-center m-4 p-4 py-8 shadow-md rounded-2xl bg-white\">\n              <div className=\"flex justify-center flex-col items-center \">\n                <img className=\"\" src={logo} alt=\"Logo\" width={50} />\n\n                <p className=\"text-2xl text-gray-700 my-6\">Create a New Account</p>\n                <div className=\"flex bg-gray-100 rounded-3xl mb-8\">\n                  <Link to=\"/login\">\n                    <Button\n                      shape=\"round\"\n                      className=\"flex items-center border-transparent bg-transparent m-1 px-4\">\n                      Login\n                    </Button>\n                  </Link>\n                  <Link to=\"/signup_viewer\">\n                    <Button shape=\"round\" className=\"flex items-center   m-1 px-4\">\n                      Sign Up\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"w-full text-red-500 text-md text-center mb-4\">\n                {viewerErrMessages}\n              </div>\n              <div>\n                {currentForm === 0 ? renderPersonal() : currentForm === 1 ? renderAddress() : \"\"}\n                <div>\n                  <p className=\"my-6\">OR USING</p>\n                  <div className=\"flex justify-evenly\">\n                    <Button shape=\"round\" icon={<FaGoogle />} className=\"flex items-center p-2\">\n                      Google\n                    </Button>\n                    <Button\n                      className=\"flex items-center p-2\"\n                      type=\"primary\"\n                      shape=\"round\"\n                      icon={<FaFacebook />}>\n                      Facebook\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            renderPayment()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupViewer;\n","/home/bek/Projects/React/talguu-client/src/redux/reducers/index.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/video.reducer.js",["255"],"import {\n  GET_PAID_VIDEO_URL_FAILURE,\n  GET_PAID_VIDEO_URL_SUCCESS,\n  PURCHASE_VIDEO_FAILURE,\n  PURCHASE_VIDEO_SUCCESS,\n  VIDEO_FAILURE,\n  VIDEO_READY,\n  VIDEO_SUCCESS,\n  VIEWER_VIDEOS_FAILURE,\n  VIEWER_VIDEOS_SUCCESS,\n} from \"../types\";\n\nconst INITIAL_STATE = {\n  video: {},\n  videoStatus: null,\n  errMessages: null,\n  viewerVideos: [],\n  video_link: \"\",\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  // console.log(\"action-red\", action);\n  switch (action.type) {\n    case VIDEO_READY:\n      return { ...state, video: action.payload, videoStatus: \"READY\" };\n    case VIDEO_SUCCESS:\n      return { ...state, user: action.payload, videoStatus: \"SUCCESSFUL\" };\n    case VIDEO_FAILURE:\n      return { ...state, errMessages: action.payload, videoStatus: \"FAILED\" };\n    case VIEWER_VIDEOS_SUCCESS:\n      return { ...state, viewerVideos: action.payload };\n    case VIEWER_VIDEOS_FAILURE:\n      return { ...state, errMessages: action.payload };\n    case GET_PAID_VIDEO_URL_SUCCESS:\n      return { ...state, video_link: action.payload.video_link };\n    case GET_PAID_VIDEO_URL_FAILURE:\n      return { ...state, errMessages: action.payload };\n    case PURCHASE_VIDEO_SUCCESS:\n      return { ...state, video_link: action.video_link };\n    case PURCHASE_VIDEO_FAILURE:\n      return { ...state, errMessages: action.payload };\n    default:\n      return state;\n  }\n};\n","/home/bek/Projects/React/talguu-client/src/redux/reducers/authentication.reducer.js",[],"/home/bek/Projects/React/talguu-client/src/pages/NotFound.jsx",[],"/home/bek/Projects/React/talguu-client/src/pages/uploadVideo/EditUploadVideos.jsx",["256","257","258","259"],"import { Button, Form, Input, PageHeader } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nimport { FaInfo, FaTag, FaUser } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport Header from \"../../partials/header/Header\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport videoService from \"../../_services/video.service\";\nimport Thumbnail from \"./Thumbnail\";\nimport Trailer from \"./Trailer\";\n\nconst EditUploadVideos = (props) => {\n  var history = useHistory();\n  const [video, setVideo] = useState(props.location.state);\n  const [title, setTitle] = useState(video.title);\n  const [describe, setDescribe] = useState(video.describe);\n\n  const publishVideo = () => {\n    console.log(\"title,describe\", title, describe);\n\n    videoService\n      .updateVideo({ id:video.id,title: title, describe: describe })\n      .then((data) => {\n        if(data[0]){\n          history.push(\"/your_video\")\n        }\n      })\n      .catch((err) => {\n        console.log('err', err)\n      });\n\n  };\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    aspectRatio: \"16:9\",\n    responsive: true,\n    sources: [\n      {\n        src: video.videoLink,\n        type: \"video/mkv\",\n      },\n    ],\n  };\n  return (\n    <div className=\"mx-2 my-20 relative\">\n      {/* <SideNav /> */}\n      <Header />\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.goBack()}\n        title=\"Edit Video\"\n        subTitle=\"Add extra additional infromation\"\n      />\n      <Button\n        className=\"absolute top-3 right-2\"\n        onClick={publishVideo}\n        key=\"1\"\n        type=\"primary\"\n      >\n        Publish Changes\n      </Button>\n      <div className=\"flex mx-4\">\n        <div className=\"w-full\">\n          <Form\n            layout=\"vertical\"\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n              title: video.title,\n              description: video.describe,\n            }}\n            onFinish={publishVideo}\n          >\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              className=\"text-lg text-gray-600\"\n              rules={[{ required: true, message: \"Please input your Title!\" }]}\n            >\n              <Input\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                className=\"rounded-lg text-gray-700 text-lg p-2\"\n                placeholder=\"Title*\"\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n              name=\"description\"\n              rules={[\n                { required: false, message: \"Please input your Description!\" },\n              ]}\n            >\n              <TextArea\n                value={describe}\n                onChange={(e) => setDescribe(e.target.value)}\n                className=\"rounded-lg text-gray-700 text-lg p-2\"\n                prefix={<FaInfo className=\"site-form-item-icon\" />}\n                placeholder=\"Description*\"\n              />\n            </Form.Item>\n\n            {/* <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"round\"\n                className=\"login-form-button w-full\"\n              >\n                Next\n              </Button>\n            </Form.Item> */}\n          </Form>\n          <div>\n            <div className=\"flex flex-col items-start justify-start\">\n              <h2 className=\"text-lg\">Thumbnail</h2>\n              <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                Select or upload a picture that shows what's in your video. A\n                good thumbnail stands out and draws viewers' attention.\n              </h3>\n              <Thumbnail video={video.id} thumbnails={video.thumbnial} />\n            </div>\n            <div className=\"flex flex-col items-start justify-start\">\n              <h2 className=\"text-lg\">Trailer</h2>\n              <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                Select or upload a trailer that shows what's in your video in a\n                minute. A good trailer draws viewers' attention.\n              </h3>\n              <Trailer />\n            </div>\n          </div>\n        </div>\n        <div className=\"w-3/4 p-4 \">\n          <VideoPlayer {...videoJsOptions} />\n\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUploadVideos;\n","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/Stream.jsx",["260","261","262","263","264","265","266","267"],"import { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, PageHeader, Select } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nimport { FaInfo, FaTag, FaUser } from \"react-icons/fa\";\nimport VideoPlayer from \"../../components/videoPlayer/VideoPlayer\";\nimport Header from \"../../partials/header/Header\";\nimport SideNav from \"../../partials/sideNav/SideNav\";\nimport videoService from \"../../_services/video.service\";\nimport Thumbnail from \"../uploadVideo/Thumbnail\";\nimport { Option } from \"antd/lib/mentions\";\n\nconst Stream = (props) => {\n  const [property, setProperty] = useState(props.location.state);\n  const [title, setTitle] = useState(property.title);\n  const [describe, setDescribe] = useState(property.description);\n  const [streamKey, setStreamKey] = useState(\"u8ks8Qiq91kjIUH71JK90hkjs7\");\n  const [streamURL, setStreamURL] = useState(\"rmtn://talguu.com/live.go\");\n  var history = useHistory();\n  const goLive = () => {};\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    aspectRatio: \"16:9\",\n    responsive: true,\n    sources: [\n      {\n        src: \"\",\n        type: \"video/mkv\",\n      },\n    ],\n  };\n  return (\n    <div>\n      <div className=\"mx-2 my-20 relative\">\n        {/* <SideNav /> */}\n        <Header />\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => history.goBack()}\n          title=\"Live\"\n          subTitle=\"Add extra additional infromation\"\n        />\n        <Button\n          className=\"absolute top-3 right-2\"\n          onClick={(e) => history.push(\"/your_video\")}\n          key=\"1\"\n          type=\"danger\"\n        >\n          End Stream\n        </Button>\n        <div className=\"flex mx-4\">\n          <div className=\"w-2/5 p-4 \">\n            <VideoPlayer {...videoJsOptions} />\n\n            <div className=\"flex flex-col items-start my-4\">\n              <h2 className=\"text-lg font-semibold\">Stream Setting</h2>\n              <div className=\"flex flex-col items-start my-2\">\n                <span>Stream Key</span>\n                <Input value={streamKey} suffix=\"Copy\" />\n              </div>\n              <div className=\"flex flex-col items-start my-2\">\n                <span>Stream URL</span>\n                <Input value={streamURL} suffix=\"Copy\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"w-3/5\">\n            <Form\n              layout=\"vertical\"\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{\n                remember: true,\n                title: property.title,\n                description: property.description,\n                select:property.select\n              }}\n              onFinish={goLive}\n            >\n              <Form.Item\n                label=\"Title\"\n                name=\"title\"\n                className=\"text-lg text-gray-600\"\n                rules={[\n                  { required: true, message: \"Please input your Title!\" },\n                ]}\n              >\n                <Input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  className=\"rounded-lg text-gray-700 text-lg p-2\"\n                  placeholder=\"Title*\"\n                />\n              </Form.Item>\n              <Form.Item\n                label=\"Description\"\n                name=\"description\"\n                rules={[\n                  {\n                    required: false,\n                    message: \"Please input your Description!\",\n                  },\n                ]}\n              >\n                <TextArea\n                  value={describe}\n                  onChange={(e) => setDescribe(e.target.value)}\n                  className=\"rounded-lg text-gray-700 text-lg p-2\"\n                  prefix={<FaInfo className=\"site-form-item-icon\" />}\n                  placeholder=\"Description*\"\n                />\n              </Form.Item>\n              <Form.Item\n                className=\"w-64 flex\"\n                name=\"select\"\n                label=\"Select audience\"\n                hasFeedback\n                rules={[\n                  { required: true, message: \"Please select your country!\" },\n                ]}\n              >\n                <Select placeholder=\"Select audience\"  className=\"rounded-lg w-20 text-gray-700 text-base p-2\">\n                  <Option value=\"private\">Private</Option>\n                  <Option value=\"public\">Public</Option>\n                </Select>\n              </Form.Item>\n\n              {/* <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"round\"\n                className=\"login-form-button w-full\"\n              >\n                Next\n              </Button>\n            </Form.Item> */}\n            </Form>\n\n            <div>\n              <div className=\"flex flex-col items-start justify-start\">\n                <h2 className=\"text-lg\">Thumbnail</h2>\n                <h3 className=\"text-md text-gray-600 items-start m-0 p-0 text-justify\">\n                  Select or upload a picture that shows what's in your video. A\n                  good thumbnail stands out and draws viewers' attention.\n                </h3>\n                {/* <Thumbnail video={video.id} thumbnails={video.thumbnial} /> */}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"w-1/5 flex flex-col items-center\">\n            <h2 className=\"font-semibold text-base\">Stream Analytics</h2>\n            <div>\n              <div className=\"rounded-lg w-32 p-4 m-2 shadow-lg bg-white \">\n                <b>0</b>\n                <p>Current Views </p>\n              </div>\n              <div className=\"rounded-lg w-32 p-4 m-2 shadow-lg bg-white \">\n                <b>0</b>\n                <p>Current Likes </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stream;\n","/home/bek/Projects/React/talguu-client/src/pages/streamVideo/StreamForm.jsx",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/accountReducer.js",["268"],"import {\n  CREATE_PRODUCER_SUCCESS,\n  CREATE_PRODUCER_FAILURE,\n  CREATE_VIEWER_FAILURE,\n  CREATE_VIEWER_SUCCESS,\n} from \"../types\";\n\nconst INITIAL_STATE = {\n  user: {},\n  createUserStatus: null,\n  errMessages: null,\n  createViewerStatus: null,\n  viewerErrMessages: null,\n  viewerUser: {},\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_PRODUCER_SUCCESS:\n      return { ...state, user: action.payload, createUserStatus: \"SUCCESSFUL\" };\n    case CREATE_PRODUCER_FAILURE:\n      return { ...state, errMessages: action.payload, createUserStatus: \"FAILED\" };\n    case CREATE_VIEWER_SUCCESS:\n      return { ...state, viewerUser: action.payload, createViewerStatus: \"SUCCESSFUL\" };\n    case CREATE_VIEWER_FAILURE:\n      return { ...state, viewerErrMessages: action.payload, createViewerStatus: \"FAILED\" };\n    default:\n      return state;\n  }\n};\n","/home/bek/Projects/React/talguu-client/src/_services/axiosDefault.js",[],"/home/bek/Projects/React/talguu-client/src/redux/reducers/errorReducer.js",["269"],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":26},{"ruleId":"274","severity":1,"message":"278","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":21},{"ruleId":"274","severity":1,"message":"279","line":6,"column":10,"nodeType":"276","messageId":"277","endLine":6,"endColumn":20},{"ruleId":"270","replacedBy":"280"},{"ruleId":"272","replacedBy":"281"},{"ruleId":"274","severity":1,"message":"282","line":30,"column":10,"nodeType":"276","messageId":"277","endLine":30,"endColumn":15},{"ruleId":"283","severity":1,"message":"284","line":91,"column":17,"nodeType":"285","endLine":91,"endColumn":58},{"ruleId":"286","severity":1,"message":"287","line":4,"column":1,"nodeType":"288","endLine":39,"endColumn":3},{"ruleId":"270","replacedBy":"289"},{"ruleId":"272","replacedBy":"290"},{"ruleId":"274","severity":1,"message":"291","line":6,"column":10,"nodeType":"276","messageId":"277","endLine":6,"endColumn":17},{"ruleId":"274","severity":1,"message":"292","line":6,"column":19,"nodeType":"276","messageId":"277","endLine":6,"endColumn":26},{"ruleId":"274","severity":1,"message":"293","line":7,"column":10,"nodeType":"276","messageId":"277","endLine":7,"endColumn":20},{"ruleId":"274","severity":1,"message":"294","line":8,"column":9,"nodeType":"276","messageId":"277","endLine":8,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":37,"column":6,"nodeType":"276","endLine":37,"endColumn":18},{"ruleId":"295","severity":1,"message":"297","line":37,"column":6,"nodeType":"276","endLine":37,"endColumn":18,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":40,"column":26,"nodeType":"301","messageId":"302","endLine":40,"endColumn":28},{"ruleId":"295","severity":1,"message":"296","line":48,"column":6,"nodeType":"276","endLine":48,"endColumn":22},{"ruleId":"295","severity":1,"message":"303","line":48,"column":6,"nodeType":"276","endLine":48,"endColumn":22,"suggestions":"304"},{"ruleId":"274","severity":1,"message":"305","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":26},{"ruleId":"299","severity":1,"message":"306","line":31,"column":27,"nodeType":"301","messageId":"302","endLine":31,"endColumn":29},{"ruleId":"274","severity":1,"message":"307","line":2,"column":31,"nodeType":"276","messageId":"277","endLine":2,"endColumn":39},{"ruleId":"286","severity":1,"message":"287","line":5,"column":1,"nodeType":"288","endLine":67,"endColumn":3},{"ruleId":"308","severity":1,"message":"309","line":46,"column":7,"nodeType":"310","messageId":"311","endLine":46,"endColumn":39},{"ruleId":"274","severity":1,"message":"312","line":24,"column":14,"nodeType":"276","messageId":"277","endLine":24,"endColumn":21},{"ruleId":"274","severity":1,"message":"313","line":19,"column":16,"nodeType":"276","messageId":"277","endLine":19,"endColumn":23},{"ruleId":"274","severity":1,"message":"314","line":29,"column":10,"nodeType":"276","messageId":"277","endLine":29,"endColumn":24},{"ruleId":"274","severity":1,"message":"315","line":2,"column":38,"nodeType":"276","messageId":"277","endLine":2,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":42,"column":28,"nodeType":"301","messageId":"302","endLine":42,"endColumn":30},{"ruleId":"274","severity":1,"message":"316","line":69,"column":9,"nodeType":"276","messageId":"277","endLine":69,"endColumn":24},{"ruleId":"274","severity":1,"message":"317","line":213,"column":9,"nodeType":"276","messageId":"277","endLine":213,"endColumn":21},{"ruleId":"286","severity":1,"message":"318","line":21,"column":1,"nodeType":"288","endLine":45,"endColumn":3},{"ruleId":"274","severity":1,"message":"319","line":4,"column":18,"nodeType":"276","messageId":"277","endLine":4,"endColumn":23},{"ruleId":"274","severity":1,"message":"320","line":4,"column":25,"nodeType":"276","messageId":"277","endLine":4,"endColumn":31},{"ruleId":"274","severity":1,"message":"321","line":8,"column":8,"nodeType":"276","messageId":"277","endLine":8,"endColumn":15},{"ruleId":"274","severity":1,"message":"322","line":15,"column":17,"nodeType":"276","messageId":"277","endLine":15,"endColumn":25},{"ruleId":"274","severity":1,"message":"319","line":5,"column":18,"nodeType":"276","messageId":"277","endLine":5,"endColumn":23},{"ruleId":"274","severity":1,"message":"320","line":5,"column":25,"nodeType":"276","messageId":"277","endLine":5,"endColumn":31},{"ruleId":"274","severity":1,"message":"321","line":8,"column":8,"nodeType":"276","messageId":"277","endLine":8,"endColumn":15},{"ruleId":"274","severity":1,"message":"323","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":20},{"ruleId":"274","severity":1,"message":"324","line":10,"column":8,"nodeType":"276","messageId":"277","endLine":10,"endColumn":17},{"ruleId":"274","severity":1,"message":"325","line":14,"column":20,"nodeType":"276","messageId":"277","endLine":14,"endColumn":31},{"ruleId":"274","severity":1,"message":"326","line":17,"column":21,"nodeType":"276","messageId":"277","endLine":17,"endColumn":33},{"ruleId":"274","severity":1,"message":"327","line":18,"column":21,"nodeType":"276","messageId":"277","endLine":18,"endColumn":33},{"ruleId":"286","severity":1,"message":"318","line":17,"column":1,"nodeType":"288","endLine":30,"endColumn":3},{"ruleId":"286","severity":1,"message":"318","line":7,"column":1,"nodeType":"288","endLine":14,"endColumn":3},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useHistory' is defined but never used.",["328"],["329"],"'title' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["328"],["329"],"'FaTimes' is defined but never used.","'FaVideo' is defined but never used.","'RiTimeFill' is defined but never used.","'SubMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'serverErrors'. Either include it or remove the dependency array.",["330"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'createUserStatus'. Either include it or remove the dependency array.",["331"],"'Component' is defined but never used.","Expected '!==' and instead saw '!='.","'Checkbox' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'request' is defined but never used.","'getUser' is defined but never used.","'handleResponse' is defined but never used.","'DatePicker' is defined but never used.","'onPaymentFinish' is assigned a value but never used.","'onYearChange' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'FaTag' is defined but never used.","'FaUser' is defined but never used.","'SideNav' is defined but never used.","'setVideo' is assigned a value but never used.","'videoService' is defined but never used.","'Thumbnail' is defined but never used.","'setProperty' is assigned a value but never used.","'setStreamKey' is assigned a value but never used.","'setStreamURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},"Update the dependencies array to be: [serverErrors]",{"range":"336","text":"337"},"Update the dependencies array to be: [createUserStatus]",{"range":"338","text":"339"},[1124,1136],"[serverErrors]",[1375,1391],"[createUserStatus]"]